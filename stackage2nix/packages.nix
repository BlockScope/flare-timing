# Generated by stackage2nix 0.7.2 from "../../../haskell/lts-haskell/lts-11.20.yaml"
{ pkgs, stdenv, callPackage }:

self: {
  "Cabal" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, containers
     , deepseq, directory, filepath, pretty, process, QuickCheck, tagged
     , tasty, tasty-hunit, tasty-quickcheck, time, unix
     }:
     mkDerivation {
       pname = "Cabal";
       version = "2.0.1.1";
       sha256 = "06rx6jxikqrdf7k6pmam5cvhwnagq6njmb9qm5777nrz278ccaw0";
       revision = "1";
       editedCabalFile = "17ydppw8x5cx5whrs44yxirh7xgcaa6gzvxmlgqnbalcf8wkj23l";
       libraryHaskellDepends = [
         array base binary bytestring containers deepseq directory filepath
         pretty process time unix
       ];
       testHaskellDepends = [
         array base containers directory filepath pretty QuickCheck tagged
         tasty tasty-hunit tasty-quickcheck
       ];
       homepage = "http://www.haskell.org/cabal/";
       description = "A framework for packaging Haskell software";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ChasingBottoms" = callPackage
    ({ mkDerivation, array, base, containers, mtl, QuickCheck, random
     , syb
     }:
     mkDerivation {
       pname = "ChasingBottoms";
       version = "1.3.1.4";
       sha256 = "06cynx6hcbfpky7qq3b3mjjgwbnaxkwin3znbwq4b9ikiw0ng633";
       libraryHaskellDepends = [
         base containers mtl QuickCheck random syb
       ];
       testHaskellDepends = [
         array base containers mtl QuickCheck random syb
       ];
       description = "For testing partial and infinite values";
       license = stdenv.lib.licenses.mit;
     }) {};
  "Glob" = callPackage
    ({ mkDerivation, base, containers, directory, dlist, filepath
     , HUnit, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "Glob";
       version = "0.9.2";
       sha256 = "1rbwcq9w9951qsnp13vqcm9r01yax2yh1wk8s4zxa3ckk9717iwg";
       libraryHaskellDepends = [
         base containers directory dlist filepath transformers
         transformers-compat
       ];
       testHaskellDepends = [
         base containers directory dlist filepath HUnit QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2
         transformers transformers-compat
       ];
       homepage = "http://iki.fi/matti.niemenmaa/glob/";
       description = "Globbing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HTTP" = callPackage
    ({ mkDerivation, array, base, bytestring, mtl, network, network-uri
     , parsec, time
     }:
     mkDerivation {
       pname = "HTTP";
       version = "4000.3.12";
       sha256 = "140r6qy1ay25piv0z3hih11zhigyi08nkwc32097j43pjff6mzx3";
       libraryHaskellDepends = [
         array base bytestring mtl network network-uri parsec time
       ];
       doCheck = false;
       homepage = "https://github.com/haskell/HTTP";
       description = "A library for client-side HTTP";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "HUnit" = callPackage
    ({ mkDerivation, base, call-stack, deepseq, filepath }:
     mkDerivation {
       pname = "HUnit";
       version = "1.6.0.0";
       sha256 = "1pnhwqq5v8h48gbp3ibv3skfj25mf4zs5svxcavq93p9cswycj3l";
       libraryHaskellDepends = [ base call-stack deepseq ];
       testHaskellDepends = [ base call-stack deepseq filepath ];
       homepage = "https://github.com/hspec/HUnit#readme";
       description = "A unit testing framework for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "Only" = callPackage
    ({ mkDerivation, base, deepseq }:
     mkDerivation {
       pname = "Only";
       version = "0.1";
       sha256 = "0rdj3a629fk2vp121jq8mf2smkblrz5w3cxhlsyx6my2x29s2ymb";
       revision = "1";
       editedCabalFile = "1ahk7p34kmh041mz7lyc10nhcxgv2i4z8nvzxvqm2x34gslmsbzr";
       libraryHaskellDepends = [ base deepseq ];
       description = "The 1-tuple type or single-value \"collection\"";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "PSQueue" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "PSQueue";
       version = "1.1";
       sha256 = "1k291bh8j5vpcrn6vycww2blwg7jxx9yrfmrqdanz48gs4d8gq58";
       revision = "1";
       editedCabalFile = "0gpx33bkhpwya7prnqzwpbnylm4v4nm4x8m02ggmj7d6rkklb2qq";
       libraryHaskellDepends = [ base ];
       description = "Priority Search Queue";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "QuickCheck" = callPackage
    ({ mkDerivation, base, containers, deepseq, random
     , template-haskell, tf-random, transformers
     }:
     mkDerivation {
       pname = "QuickCheck";
       version = "2.10.1";
       sha256 = "1rfmns3lj3hl93k1jws85ajkkw7z9ll8cw292n9m7zald1w5dfqx";
       libraryHaskellDepends = [
         base containers deepseq random template-haskell tf-random
         transformers
       ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/nick8325/quickcheck";
       description = "Automatic testing of Haskell programs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "SHA" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, QuickCheck
     , test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "SHA";
       version = "1.6.4.4";
       sha256 = "0i4b2wjisivdy72synal711ywhx05mfqfba5n65rk8qidggm1nbb";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ array base binary bytestring ];
       testHaskellDepends = [
         array base binary bytestring QuickCheck test-framework
         test-framework-quickcheck2
       ];
       description = "Implementations of the SHA suite of message digest functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "StateVar" = callPackage
    ({ mkDerivation, base, stm, transformers }:
     mkDerivation {
       pname = "StateVar";
       version = "1.1.1.0";
       sha256 = "102f4x240zj3jwa7gx6vp813j76cjhlc3zbi9i5kiz6268kcv28s";
       libraryHaskellDepends = [ base stm transformers ];
       homepage = "https://github.com/haskell-opengl/StateVar";
       description = "State variables";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "abstract-deque" = callPackage
    ({ mkDerivation, array, base, containers, random, time }:
     mkDerivation {
       pname = "abstract-deque";
       version = "0.3";
       sha256 = "18jwswjxwzc9bjiy4ds6hw2a74ki797jmfcifxd2ga4kh7ri1ah9";
       libraryHaskellDepends = [ array base containers random time ];
       homepage = "https://github.com/rrnewton/haskell-lockfree/wiki";
       description = "Abstract, parameterized interface to mutable Deques";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "abstract-par" = callPackage
    ({ mkDerivation, base, deepseq }:
     mkDerivation {
       pname = "abstract-par";
       version = "0.3.3";
       sha256 = "0q6qsniw4wks2pw6wzncb1p1j3k6al5njnvm2v5n494hplwqg2i4";
       libraryHaskellDepends = [ base deepseq ];
       homepage = "https://github.com/simonmar/monad-par";
       description = "Type classes generalizing the functionality of the 'monad-par' library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "adjunctions" = callPackage
    ({ mkDerivation, array, base, comonad, containers, contravariant
     , distributive, free, generic-deriving, hspec, hspec-discover, mtl
     , profunctors, semigroupoids, semigroups, tagged, transformers
     , transformers-compat, void
     }:
     mkDerivation {
       pname = "adjunctions";
       version = "4.4";
       sha256 = "1sbal7cbhm12crfnfhkk322jnzgx7lhw3jzq0p463bipagsjwz2h";
       revision = "1";
       editedCabalFile = "0582nnn3fab63nd7ng8smk2c8j7pciiyzfj1na34wqid2hs675as";
       libraryHaskellDepends = [
         array base comonad containers contravariant distributive free mtl
         profunctors semigroupoids semigroups tagged transformers
         transformers-compat void
       ];
       testHaskellDepends = [ base distributive generic-deriving hspec ];
       testToolDepends = [ hspec-discover ];
       homepage = "http://github.com/ekmett/adjunctions/";
       description = "Adjunctions and representable functors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson" = callPackage
    ({ mkDerivation, attoparsec, base, base-compat, bytestring
     , containers, deepseq, dlist, ghc-prim, hashable, scientific
     , tagged, template-haskell, text, th-abstraction, time
     , time-locale-compat, unordered-containers, uuid-types, vector
     }:
     mkDerivation {
       pname = "aeson";
       version = "1.2.4.0";
       sha256 = "16zwpd07cmhs58wwsqbhxy3b58gqw8w5nr7nf6lwi4nvznjdn09l";
       libraryHaskellDepends = [
         attoparsec base base-compat bytestring containers deepseq dlist
         ghc-prim hashable scientific tagged template-haskell text
         th-abstraction time time-locale-compat unordered-containers
         uuid-types vector
       ];
       doCheck = false;
       homepage = "https://github.com/bos/aeson";
       description = "Fast JSON parsing and encoding";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson-compat" = callPackage
    ({ mkDerivation, aeson, attoparsec, attoparsec-iso8601, base
     , base-compat, bytestring, containers, exceptions, hashable
     , scientific, tagged, text, time, time-locale-compat
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "aeson-compat";
       version = "0.3.8";
       sha256 = "0j4v13pgk21zy8hqkbx8hw0n05jdl17qphxz9rj4h333pr547r3i";
       revision = "1";
       editedCabalFile = "0ayf5hkhl63lmlxpl7w5zvnz0lvpxb2rwmf0wbslff0y2s449mbf";
       libraryHaskellDepends = [
         aeson attoparsec attoparsec-iso8601 base base-compat bytestring
         containers exceptions hashable scientific tagged text time
         time-locale-compat unordered-containers vector
       ];
       doCheck = false;
       homepage = "https://github.com/phadej/aeson-compat#readme";
       description = "Compatibility layer for aeson";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "aeson-pretty" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base-compat, bytestring
     , cmdargs, scientific, text, unordered-containers, vector
     }:
     mkDerivation {
       pname = "aeson-pretty";
       version = "0.8.7";
       sha256 = "1m977gs0s9gf3lwzlbs5y7bl6ansc5pywmn2qjk09l5bwg2yrhf1";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson base base-compat bytestring scientific text
         unordered-containers vector
       ];
       executableHaskellDepends = [
         aeson attoparsec base bytestring cmdargs
       ];
       homepage = "http://github.com/informatikr/aeson-pretty";
       description = "JSON pretty-printing library and command-line tool";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ansi-terminal" = callPackage
    ({ mkDerivation, base, colour }:
     mkDerivation {
       pname = "ansi-terminal";
       version = "0.8.0.4";
       sha256 = "0428gq8m3fdnb7ldcsyk97qcch76hcxbgh2666p6f76fs2qbhg7b";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base colour ];
       homepage = "https://github.com/feuerbach/ansi-terminal";
       description = "Simple ANSI terminal support, with Windows compatibility";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ansi-wl-pprint" = callPackage
    ({ mkDerivation, ansi-terminal, base }:
     mkDerivation {
       pname = "ansi-wl-pprint";
       version = "0.6.8.2";
       sha256 = "0gnb4mkqryv08vncxnj0bzwcnd749613yw3cxfzw6y3nsldp4c56";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ ansi-terminal base ];
       homepage = "http://github.com/ekmett/ansi-wl-pprint";
       description = "The Wadler/Leijen Pretty Printer for colored ANSI terminal output";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "appar" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "appar";
       version = "0.1.4";
       sha256 = "09jb9ij78fdkz2qk66rw99q19qnm504dpv0yq0pjsl6xwjmndsjq";
       libraryHaskellDepends = [ base bytestring ];
       description = "A simple applicative parser";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "async" = callPackage
    ({ mkDerivation, base, HUnit, stm, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "async";
       version = "2.1.1.1";
       sha256 = "1qj4fp1ynwg0l453gmm27vgkzb5k5m2hzdlg5rdqi9kf8rqy90yd";
       libraryHaskellDepends = [ base stm ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit
       ];
       homepage = "https://github.com/simonmar/async";
       description = "Run IO operations asynchronously and wait for their results";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "attoparsec" = callPackage
    ({ mkDerivation, array, base, bytestring, case-insensitive
     , containers, criterion, deepseq, directory, filepath, ghc-prim
     , http-types, parsec, scientific, text, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "attoparsec";
       version = "0.13.2.2";
       sha256 = "0j6qcwd146yzlkc9mcvzvnixsyl65n2a68l28322q5v9p4g4g4yx";
       libraryHaskellDepends = [
         array base bytestring containers deepseq scientific text
         transformers
       ];
       benchmarkHaskellDepends = [
         array base bytestring case-insensitive containers criterion deepseq
         directory filepath ghc-prim http-types parsec scientific text
         transformers unordered-containers vector
       ];
       doCheck = false;
       homepage = "https://github.com/bos/attoparsec";
       description = "Fast combinator parsing for bytestrings and text";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "attoparsec-iso8601" = callPackage
    ({ mkDerivation, attoparsec, base, base-compat, text, time }:
     mkDerivation {
       pname = "attoparsec-iso8601";
       version = "1.0.0.0";
       sha256 = "12l55b76bhya9q89mfmqmy6sl5v39b6gzrw5rf3f70vkb23nsv5a";
       revision = "1";
       editedCabalFile = "06f7pgmmc8456p3hc1y23kz1y127gfczy7s00wz1rls9g2sm2vi4";
       libraryHaskellDepends = [ attoparsec base base-compat text time ];
       homepage = "https://github.com/bos/aeson";
       description = "Parsing of ISO 8601 dates, originally from aeson";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "auto-update" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "auto-update";
       version = "0.1.4";
       sha256 = "09dlh2alsx2mw5kvj931yhbj0aw7jmly2cm9xbscm2sf098w35jy";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/yesodweb/wai";
       description = "Efficiently run periodic, on-demand actions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "base-compat" = callPackage
    ({ mkDerivation, base, hspec, QuickCheck, unix }:
     mkDerivation {
       pname = "base-compat";
       version = "0.9.3";
       sha256 = "0452l6zf6fjhy4kxqwv6i6hhg6yfx4wcg450k3axpyj30l7jnq3x";
       libraryHaskellDepends = [ base unix ];
       testHaskellDepends = [ base hspec QuickCheck ];
       description = "A compatibility layer for base";
       license = stdenv.lib.licenses.mit;
     }) {};
  "base-orphans" = callPackage
    ({ mkDerivation, base, ghc-prim, hspec, hspec-discover, QuickCheck
     }:
     mkDerivation {
       pname = "base-orphans";
       version = "0.7";
       sha256 = "057f9npnqk71ccfh95djfkpd54dzazphj06grwxa3fyhwcwxrb8a";
       libraryHaskellDepends = [ base ghc-prim ];
       testHaskellDepends = [ base hspec QuickCheck ];
       testToolDepends = [ hspec-discover ];
       homepage = "https://github.com/haskell-compat/base-orphans#readme";
       description = "Backwards-compatible orphan instances for base";
       license = stdenv.lib.licenses.mit;
     }) {};
  "base-prelude" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "base-prelude";
       version = "1.2.1";
       sha256 = "1f4s2f454zpcfrb5qi7pdlmljsfyw8zpk0kzs3dngki0ysh0rwq7";
       libraryHaskellDepends = [ base ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/base-prelude";
       description = "The most complete prelude formed solely from the \"base\" package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "base-unicode-symbols" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "base-unicode-symbols";
       version = "0.2.2.4";
       sha256 = "1afc5pchd3vw33bmjbjygkd0l5zh7glbsx4bfyxfscpc1x1l3y52";
       libraryHaskellDepends = [ base ];
       homepage = "http://haskell.org/haskellwiki/Unicode-symbols";
       description = "Unicode alternatives for common functions and operators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "base64-bytestring" = callPackage
    ({ mkDerivation, base, bytestring, containers, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "base64-bytestring";
       version = "1.0.0.1";
       sha256 = "0l1v4ddjdsgi9nqzyzcxxj76rwar3lzx8gmwf2r54bqan3san9db";
       libraryHaskellDepends = [ base bytestring ];
       testHaskellDepends = [
         base bytestring containers HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "https://github.com/bos/base64-bytestring";
       description = "Fast base64 encoding and decoding for ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "basement" = callPackage
    ({ mkDerivation, base, ghc-prim }:
     mkDerivation {
       pname = "basement";
       version = "0.0.8";
       sha256 = "194jw567di4q2758943q9rrwkbf9gl261my7qc21i9xhyabipx67";
       libraryHaskellDepends = [ base ghc-prim ];
       homepage = "https://github.com/haskell-foundation/foundation#readme";
       description = "Foundation scrap box of array & string";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bifunctors" = callPackage
    ({ mkDerivation, base, base-orphans, comonad, containers, hspec
     , hspec-discover, QuickCheck, semigroups, tagged, template-haskell
     , th-abstraction, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "bifunctors";
       version = "5.5.3";
       sha256 = "1jn9rxg643xnlhrknmjz88nblcpsr45xwjkwwnn5nxpasa7m4d6l";
       libraryHaskellDepends = [
         base base-orphans comonad containers semigroups tagged
         template-haskell th-abstraction transformers
       ];
       testHaskellDepends = [
         base hspec QuickCheck template-haskell transformers
         transformers-compat
       ];
       testToolDepends = [ hspec-discover ];
       homepage = "http://github.com/ekmett/bifunctors/";
       description = "Bifunctors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blaze-builder" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, HUnit, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , text, utf8-string
     }:
     mkDerivation {
       pname = "blaze-builder";
       version = "0.4.1.0";
       sha256 = "05681dih2d8s96an945wkbwl05w8ddbcfx8n3r3ck79ydyb8pz4i";
       libraryHaskellDepends = [ base bytestring deepseq text ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 text utf8-string
       ];
       homepage = "http://github.com/lpsmith/blaze-builder";
       description = "Efficient buffered output";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blaze-html" = callPackage
    ({ mkDerivation, base, blaze-builder, blaze-markup, bytestring
     , text
     }:
     mkDerivation {
       pname = "blaze-html";
       version = "0.9.1.1";
       sha256 = "06xv8fqhclfjj61z74cgggn4lmx1s7diakxg84mnkgfvk11983pa";
       libraryHaskellDepends = [
         base blaze-builder blaze-markup bytestring text
       ];
       doCheck = false;
       homepage = "http://jaspervdj.be/blaze";
       description = "A blazingly fast HTML combinator library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "blaze-markup" = callPackage
    ({ mkDerivation, base, blaze-builder, bytestring, text }:
     mkDerivation {
       pname = "blaze-markup";
       version = "0.8.2.1";
       sha256 = "0ih1c3qahkdgzbqihdhny5s313l2m66fbb88w8jbx7yz56y7rawh";
       libraryHaskellDepends = [ base blaze-builder bytestring text ];
       doCheck = false;
       homepage = "http://jaspervdj.be/blaze";
       description = "A blazingly fast markup combinator library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bsb-http-chunked" = callPackage
    ({ mkDerivation, base, bytestring, bytestring-builder }:
     mkDerivation {
       pname = "bsb-http-chunked";
       version = "0.0.0.2";
       sha256 = "1x6m6xkrcw6jiaig1bb2wb5pqyw31x8xr9k9pxgq2g3ng44pbjr8";
       libraryHaskellDepends = [ base bytestring bytestring-builder ];
       homepage = "http://github.com/sjakobi/bsb-http-chunked";
       description = "Chunked HTTP transfer encoding for bytestring builders";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "byteorder" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "byteorder";
       version = "1.0.4";
       sha256 = "06995paxbxk8lldvarqpb3ygcjbg4v8dk4scib1rjzwlhssvn85x";
       libraryHaskellDepends = [ base ];
       homepage = "http://community.haskell.org/~aslatter/code/byteorder";
       description = "Exposes the native endianness or byte ordering of the system";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "bytestring-builder" = callPackage
    ({ mkDerivation, base, bytestring, deepseq }:
     mkDerivation {
       pname = "bytestring-builder";
       version = "0.10.8.1.0";
       sha256 = "1hnvjac28y44yn78c9vdp1zvrknvlw98ky3g4n5vivr16rvh8x3d";
       libraryHaskellDepends = [ base bytestring deepseq ];
       doHaddock = false;
       description = "The new bytestring builder, packaged outside of GHC";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cabal-doctest" = callPackage
    ({ mkDerivation, base, Cabal, directory, filepath }:
     mkDerivation {
       pname = "cabal-doctest";
       version = "1.0.6";
       sha256 = "0bgd4jdmzxq5y465r4sf4jv2ix73yvblnr4c9wyazazafddamjny";
       revision = "1";
       editedCabalFile = "1bk85avgc93yvcggwbk01fy8nvg6753wgmaanhkry0hz55h7mpld";
       libraryHaskellDepends = [ base Cabal directory filepath ];
       homepage = "https://github.com/phadej/cabal-doctest";
       description = "A Setup.hs helper for doctests running";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "call-stack" = callPackage
    ({ mkDerivation, base, nanospec }:
     mkDerivation {
       pname = "call-stack";
       version = "0.1.0";
       sha256 = "1qmihf5jafmc79sk52l6gpx75f5bnla2lp62kh3p34x3j84mwpzj";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base nanospec ];
       homepage = "https://github.com/sol/call-stack#readme";
       description = "Use GHC call-stacks in a backward compatible way";
       license = stdenv.lib.licenses.mit;
     }) {};
  "case-insensitive" = callPackage
    ({ mkDerivation, base, bytestring, criterion, deepseq, hashable
     , text
     }:
     mkDerivation {
       pname = "case-insensitive";
       version = "1.2.0.11";
       sha256 = "1qrpxfirsxckg7jv28f5ah2qc8lh95hp7rnqkbqs1ahcwlbnvkm7";
       libraryHaskellDepends = [ base bytestring deepseq hashable text ];
       benchmarkHaskellDepends = [ base bytestring criterion deepseq ];
       doCheck = false;
       homepage = "https://github.com/basvandijk/case-insensitive";
       description = "Case insensitive string comparison";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cassava" = callPackage
    ({ mkDerivation, array, attoparsec, base, bytestring, containers
     , deepseq, hashable, Only, scientific, text, text-short
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "cassava";
       version = "0.5.1.0";
       sha256 = "0xs2c5lpy0g5lsmp2cx0dm5lnxij7cgry6xd5gsn3bfdlap8lb3n";
       configureFlags = [ "-f-bytestring--lt-0_10_4" ];
       libraryHaskellDepends = [
         array attoparsec base bytestring containers deepseq hashable Only
         scientific text text-short unordered-containers vector
       ];
       doCheck = false;
       homepage = "https://github.com/hvr/cassava";
       description = "A CSV parsing and encoding library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cereal" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, ghc-prim
     , QuickCheck, test-framework, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "cereal";
       version = "0.5.5.0";
       sha256 = "08k8y6nf3n8h8gzw4a44mssy7rhgpmfj28lhczjz4vgszc7k55qb";
       libraryHaskellDepends = [
         array base bytestring containers ghc-prim
       ];
       testHaskellDepends = [
         base bytestring QuickCheck test-framework
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/GaloisInc/cereal";
       description = "A binary serialization library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "clock" = callPackage
    ({ mkDerivation, base, tasty, tasty-quickcheck }:
     mkDerivation {
       pname = "clock";
       version = "0.7.2";
       sha256 = "07v91s20halsqjmziqb1sqjp2sjpckl9by7y28aaklwqi2bh2rl8";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base tasty tasty-quickcheck ];
       homepage = "https://github.com/corsis/clock";
       description = "High-resolution clock functions: monotonic, realtime, cputime";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cmdargs" = callPackage
    ({ mkDerivation, base, filepath, process, template-haskell
     , transformers
     }:
     mkDerivation {
       pname = "cmdargs";
       version = "0.10.20";
       sha256 = "0cbkmgrcnwgigg6z88y3c09gm7g6dwm7gzbgr53h8k1xik29s9hf";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base filepath process template-haskell transformers
       ];
       homepage = "https://github.com/ndmitchell/cmdargs#readme";
       description = "Command line argument processing";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "code-page" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "code-page";
       version = "0.1.3";
       sha256 = "1491frk4jx6dlhifky9dvcxbsbcfssrz979a5hp5zn061rh8cp76";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base ];
       homepage = "https://github.com/RyanGlScott/code-page";
       description = "Windows code page library for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "colour" = callPackage
    ({ mkDerivation, base, QuickCheck, random, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "colour";
       version = "2.3.4";
       sha256 = "1sy51nz096sv91nxqk6yk7b92b5a40axv9183xakvki2nc09yhqg";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base QuickCheck random test-framework test-framework-quickcheck2
       ];
       homepage = "http://www.haskell.org/haskellwiki/Colour";
       description = "A model for human colour/color perception";
       license = stdenv.lib.licenses.mit;
     }) {};
  "comonad" = callPackage
    ({ mkDerivation, base, Cabal, cabal-doctest, containers
     , contravariant, distributive, doctest, semigroups, tagged
     , transformers, transformers-compat
     }:
     mkDerivation {
       pname = "comonad";
       version = "5.0.4";
       sha256 = "09g870c4flp4k3fgbibsd0mmfjani1qcpbcl685v8x89kxzrva3q";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         base containers contravariant distributive semigroups tagged
         transformers transformers-compat
       ];
       testHaskellDepends = [ base doctest ];
       homepage = "http://github.com/ekmett/comonad/";
       description = "Comonads";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "concurrent-output" = callPackage
    ({ mkDerivation, ansi-terminal, async, base, directory, exceptions
     , process, stm, terminal-size, text, transformers, unix
     }:
     mkDerivation {
       pname = "concurrent-output";
       version = "1.10.6";
       sha256 = "1qlp1vij4qgcrkw8ym5xdc0pgfwklbhsfh56sgayy3cvpvcac093";
       libraryHaskellDepends = [
         ansi-terminal async base directory exceptions process stm
         terminal-size text transformers unix
       ];
       description = "Ungarble output from several threads or commands";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "conduit" = callPackage
    ({ mkDerivation, base, bytestring, containers, deepseq, directory
     , exceptions, filepath, gauge, hspec, kan-extensions
     , mono-traversable, mtl, mwc-random, primitive, QuickCheck
     , resourcet, safe, silently, split, text, transformers, unix
     , unliftio, unliftio-core, vector
     }:
     mkDerivation {
       pname = "conduit";
       version = "1.3.0.3";
       sha256 = "1sangm0qqi9dzlq95746a3kl14k8b09592a423shxjf2a0b1yx5v";
       libraryHaskellDepends = [
         base bytestring directory exceptions filepath mono-traversable mtl
         primitive resourcet text transformers unix unliftio-core vector
       ];
       testHaskellDepends = [
         base bytestring containers directory exceptions filepath hspec
         mono-traversable mtl QuickCheck resourcet safe silently split text
         transformers unliftio vector
       ];
       benchmarkHaskellDepends = [
         base containers deepseq gauge hspec kan-extensions mwc-random
         transformers vector
       ];
       homepage = "http://github.com/snoyberg/conduit";
       description = "Streaming data processing library";
       license = stdenv.lib.licenses.mit;
     }) {};
  "conduit-extra" = callPackage
    ({ mkDerivation, async, attoparsec, base, bytestring
     , bytestring-builder, conduit, directory, exceptions, filepath
     , gauge, hspec, network, primitive, process, QuickCheck, resourcet
     , stm, streaming-commons, text, transformers, transformers-base
     , typed-process, unliftio-core
     }:
     mkDerivation {
       pname = "conduit-extra";
       version = "1.3.0";
       sha256 = "1bi2b6kdzy5f9glq46jzsk02has95jkxqz0cchpbmnakzhjwjh9c";
       libraryHaskellDepends = [
         async attoparsec base bytestring conduit directory filepath network
         primitive process resourcet stm streaming-commons text transformers
         typed-process unliftio-core
       ];
       testHaskellDepends = [
         async attoparsec base bytestring bytestring-builder conduit
         directory exceptions hspec process QuickCheck resourcet stm
         streaming-commons text transformers transformers-base
       ];
       benchmarkHaskellDepends = [
         base bytestring bytestring-builder conduit gauge transformers
       ];
       homepage = "http://github.com/snoyberg/conduit";
       description = "Batteries included conduit: adapters for common libraries";
       license = stdenv.lib.licenses.mit;
     }) {};
  "constraints" = callPackage
    ({ mkDerivation, base, binary, deepseq, ghc-prim, hashable, hspec
     , hspec-discover, mtl, semigroups, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "constraints";
       version = "0.10.1";
       sha256 = "1xy3vv78jxc17hm0z7qqspxjwv7l2jbcbj670yrl2f053qkfr02q";
       libraryHaskellDepends = [
         base binary deepseq ghc-prim hashable mtl semigroups transformers
         transformers-compat
       ];
       testHaskellDepends = [ base hspec ];
       testToolDepends = [ hspec-discover ];
       homepage = "http://github.com/ekmett/constraints/";
       description = "Constraint manipulation";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "contravariant" = callPackage
    ({ mkDerivation, base, StateVar, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "contravariant";
       version = "1.4.1";
       sha256 = "1vfhk8c5cxmmakx7rflap1ipkx5q0j5vnlrcz7yz6y53kxhksgf9";
       revision = "1";
       editedCabalFile = "0qj5nymccrb9p0cd6hffsy90jidjng14g9yv95z8v6h4q84sbzvx";
       libraryHaskellDepends = [
         base StateVar transformers transformers-compat
       ];
       homepage = "http://github.com/ekmett/contravariant/";
       description = "Contravariant functors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cookie" = callPackage
    ({ mkDerivation, base, bytestring, data-default-class, deepseq
     , HUnit, QuickCheck, tasty, tasty-hunit, tasty-quickcheck, text
     , time
     }:
     mkDerivation {
       pname = "cookie";
       version = "0.4.4";
       sha256 = "1qy09i0jh2z9i9avy2khf8a8afq4fqgnv0fyrszgfg4kmq2fsi9j";
       libraryHaskellDepends = [
         base bytestring data-default-class deepseq text time
       ];
       testHaskellDepends = [
         base bytestring HUnit QuickCheck tasty tasty-hunit tasty-quickcheck
         text time
       ];
       homepage = "http://github.com/snoyberg/cookie";
       description = "HTTP cookie parsing and rendering";
       license = stdenv.lib.licenses.mit;
     }) {};
  "cpphs" = callPackage
    ({ mkDerivation, base, directory, old-locale, old-time, polyparse
     }:
     mkDerivation {
       pname = "cpphs";
       version = "1.20.8";
       sha256 = "1bh524asqhk9v1s0wvipl0hgn7l63iy3js867yv0z3h5v2kn8vg5";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base directory old-locale old-time polyparse
       ];
       executableHaskellDepends = [
         base directory old-locale old-time polyparse
       ];
       homepage = "http://projects.haskell.org/cpphs/";
       description = "A liberalised re-implementation of cpp, the C pre-processor";
       license = "LGPL";
     }) {};
  "cpu" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "cpu";
       version = "0.1.2";
       sha256 = "0x19mlanmkg96h6h1i04w2i631z84y4rbk22ki4zhgsajysgw9sn";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/vincenthz/hs-cpu";
       description = "Cpu information and properties helpers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "criterion" = callPackage
    ({ mkDerivation, aeson, ansi-wl-pprint, base, base-compat, binary
     , bytestring, cassava, code-page, containers, deepseq, directory
     , exceptions, filepath, Glob, HUnit, js-flot, js-jquery
     , microstache, mtl, mwc-random, optparse-applicative, parsec
     , QuickCheck, semigroups, statistics, tasty, tasty-hunit
     , tasty-quickcheck, text, time, transformers, transformers-compat
     , vector, vector-algorithms
     }:
     mkDerivation {
       pname = "criterion";
       version = "1.3.0.0";
       sha256 = "0csgk6njr6a3i895d10pajf7z4r9hx8aj2r0c3rj5li6vrm37f8q";
       revision = "3";
       editedCabalFile = "0bdz45r1mf6ydcs7l333xn7da9p583g9y7n3dzvnry4by0fkcqw6";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson ansi-wl-pprint base base-compat binary bytestring cassava
         code-page containers deepseq directory exceptions filepath Glob
         js-flot js-jquery microstache mtl mwc-random optparse-applicative
         parsec semigroups statistics text time transformers
         transformers-compat vector vector-algorithms
       ];
       executableHaskellDepends = [
         base base-compat optparse-applicative semigroups
       ];
       testHaskellDepends = [
         aeson base base-compat bytestring deepseq directory HUnit
         QuickCheck statistics tasty tasty-hunit tasty-quickcheck vector
       ];
       homepage = "http://www.serpentine.com/criterion";
       description = "Robust, reliable performance measurement and analysis";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "cryptonite" = callPackage
    ({ mkDerivation, base, basement, bytestring, deepseq, gauge
     , ghc-prim, integer-gmp, memory, random, tasty, tasty-hunit
     , tasty-kat, tasty-quickcheck
     }:
     mkDerivation {
       pname = "cryptonite";
       version = "0.25";
       sha256 = "131wbbdr5yavs5k1ah9sz6fqx1ffyvaxf66pwjzsfc47mwc1mgl9";
       libraryHaskellDepends = [
         base basement bytestring deepseq ghc-prim integer-gmp memory
       ];
       testHaskellDepends = [
         base bytestring memory tasty tasty-hunit tasty-kat tasty-quickcheck
       ];
       benchmarkHaskellDepends = [
         base bytestring deepseq gauge memory random
       ];
       homepage = "https://github.com/haskell-crypto/cryptonite";
       description = "Cryptography Primitives sink";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-default" = callPackage
    ({ mkDerivation, base, data-default-class
     , data-default-instances-containers, data-default-instances-dlist
     , data-default-instances-old-locale
     }:
     mkDerivation {
       pname = "data-default";
       version = "0.7.1.1";
       sha256 = "04d5n8ybmcxba9qb6h389w9zfq1lvj81b82jh6maqp6pkhkmvydh";
       libraryHaskellDepends = [
         base data-default-class data-default-instances-containers
         data-default-instances-dlist data-default-instances-old-locale
       ];
       description = "A class for types with a default value";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-default-class" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "data-default-class";
       version = "0.1.2.0";
       sha256 = "0miyjz8d4jyvqf2vp60lyfbnflx6cj2k8apmm9ly1hq0y0iv80ag";
       libraryHaskellDepends = [ base ];
       description = "A class for types with a default value";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-default-instances-containers" = callPackage
    ({ mkDerivation, base, containers, data-default-class }:
     mkDerivation {
       pname = "data-default-instances-containers";
       version = "0.0.1";
       sha256 = "06h8xka031w752a7cjlzghvr8adqbl95xj9z5zc1b62w02phfpm5";
       libraryHaskellDepends = [ base containers data-default-class ];
       description = "Default instances for types in containers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-default-instances-dlist" = callPackage
    ({ mkDerivation, base, data-default-class, dlist }:
     mkDerivation {
       pname = "data-default-instances-dlist";
       version = "0.0.1";
       sha256 = "0narkdqiprhgayjiawrr4390h4rq4pl2pb6mvixbv2phrc8kfs3x";
       libraryHaskellDepends = [ base data-default-class dlist ];
       description = "Default instances for types in dlist";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "data-default-instances-old-locale" = callPackage
    ({ mkDerivation, base, data-default-class, old-locale }:
     mkDerivation {
       pname = "data-default-instances-old-locale";
       version = "0.0.1";
       sha256 = "00h81i5phib741yj517p8mbnc48myvfj8axzsw44k34m48lv1lv0";
       libraryHaskellDepends = [ base data-default-class old-locale ];
       description = "Default instances for types in old-locale";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "deepseq-generics" = callPackage
    ({ mkDerivation, base, deepseq, ghc-prim, HUnit, test-framework
     , test-framework-hunit
     }:
     mkDerivation {
       pname = "deepseq-generics";
       version = "0.2.0.0";
       sha256 = "17bwghc15mc9pchfd1w46jh2p3wzc86aj6a537wqwxn08rayzcxh";
       revision = "2";
       editedCabalFile = "1pnidf8w8x0w5fsqgv8hhrw07slmhxwy5x4fikgk0bd6k76aqicb";
       libraryHaskellDepends = [ base deepseq ghc-prim ];
       testHaskellDepends = [
         base deepseq ghc-prim HUnit test-framework test-framework-hunit
       ];
       homepage = "https://github.com/hvr/deepseq-generics";
       description = "GHC.Generics-based Control.DeepSeq.rnf implementation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "distributive" = callPackage
    ({ mkDerivation, base, base-orphans, Cabal, cabal-doctest, doctest
     , generic-deriving, hspec, tagged, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "distributive";
       version = "0.5.3";
       sha256 = "0y566r97sfyvhsmd4yxiz4ns2mqgwf5bdbp56wgxl6wlkidq0wwi";
       revision = "6";
       editedCabalFile = "06bd38rf31yrvvy989r44pm0id3dsxwcp6nxg7wk6ccj3n2b8rzk";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         base base-orphans tagged transformers transformers-compat
       ];
       testHaskellDepends = [ base doctest generic-deriving hspec ];
       homepage = "http://github.com/ekmett/distributive/";
       description = "Distributive functors -- Dual to Traversable";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "dlist" = callPackage
    ({ mkDerivation, base, Cabal, deepseq, QuickCheck }:
     mkDerivation {
       pname = "dlist";
       version = "0.8.0.4";
       sha256 = "0yirrh0s6acjy9hhvf5fqg2d6q5y6gm9xs04v6w1imndh1xqdwdc";
       libraryHaskellDepends = [ base deepseq ];
       testHaskellDepends = [ base Cabal QuickCheck ];
       homepage = "https://github.com/spl/dlist";
       description = "Difference lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "doctest" = callPackage
    ({ mkDerivation, base, base-compat, code-page, deepseq, directory
     , filepath, ghc, ghc-paths, hspec, HUnit, mockery, process
     , QuickCheck, setenv, silently, stringbuilder, syb, transformers
     , with-location
     }:
     mkDerivation {
       pname = "doctest";
       version = "0.13.0";
       sha256 = "08g3nmpqbnbkxc95d65hkhfabwax10qrq51vlynr342npn40mn2b";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base base-compat code-page deepseq directory filepath ghc ghc-paths
         process syb transformers
       ];
       executableHaskellDepends = [ base ];
       testHaskellDepends = [
         base base-compat code-page deepseq directory filepath ghc ghc-paths
         hspec HUnit mockery process QuickCheck setenv silently
         stringbuilder syb transformers with-location
       ];
       homepage = "https://github.com/sol/doctest#readme";
       description = "Test interactive Haskell examples";
       license = stdenv.lib.licenses.mit;
     }) {};
  "easy-file" = callPackage
    ({ mkDerivation, base, directory, filepath, time, unix }:
     mkDerivation {
       pname = "easy-file";
       version = "0.2.2";
       sha256 = "0zmlcz723051qpn8l8vi51c5rx1blwrw4094jcshkmj8p9r2xxaj";
       libraryHaskellDepends = [ base directory filepath time unix ];
       homepage = "http://github.com/kazu-yamamoto/easy-file";
       description = "Cross-platform File handling";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "entropy" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, directory, filepath
     , process, unix
     }:
     mkDerivation {
       pname = "entropy";
       version = "0.3.8";
       sha256 = "1l3lfigqvdlmxkz1wl7zdkmc0i2r5p6z4xzhiw8xdsbsw7aljfkl";
       setupHaskellDepends = [ base Cabal directory filepath process ];
       libraryHaskellDepends = [ base bytestring unix ];
       homepage = "https://github.com/TomMD/entropy";
       description = "A platform independent entropy source";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "erf" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "erf";
       version = "2.0.0.0";
       sha256 = "0dxk2r32ajmmc05vaxcp0yw6vgv4lkbmh8jcshncn98xgsfbgw14";
       libraryHaskellDepends = [ base ];
       description = "The error function, erf, and related functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "exceptions" = callPackage
    ({ mkDerivation, base, mtl, QuickCheck, stm, template-haskell
     , test-framework, test-framework-quickcheck2, transformers
     , transformers-compat
     }:
     mkDerivation {
       pname = "exceptions";
       version = "0.8.3";
       sha256 = "1gl7xzffsqmigam6zg0jsglncgzxqafld2p6kb7ccp9xirzdjsjd";
       revision = "5";
       editedCabalFile = "1kfgp41i6mfz9gjczp3flvqxfhnznd81rwldv8j05807n6mnqqii";
       libraryHaskellDepends = [
         base mtl stm template-haskell transformers transformers-compat
       ];
       testHaskellDepends = [
         base mtl QuickCheck stm template-haskell test-framework
         test-framework-quickcheck2 transformers transformers-compat
       ];
       homepage = "http://github.com/ekmett/exceptions/";
       description = "Extensible optionally-pure exceptions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "extensible-exceptions" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "extensible-exceptions";
       version = "0.1.1.4";
       sha256 = "1273nqws9ij1rp1bsq5jc7k2jxpqa0svawdbim05lf302y0firbc";
       libraryHaskellDepends = [ base ];
       description = "Extensible exceptions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "extra" = callPackage
    ({ mkDerivation, base, clock, directory, filepath, process
     , QuickCheck, time, unix
     }:
     mkDerivation {
       pname = "extra";
       version = "1.6.9";
       sha256 = "0xxcpb00pgwi9cmy6a7ghh6rblxry42p8pz5ssfgj20fs1xwzj1b";
       libraryHaskellDepends = [
         base clock directory filepath process time unix
       ];
       testHaskellDepends = [ base directory filepath QuickCheck unix ];
       homepage = "https://github.com/ndmitchell/extra#readme";
       description = "Extra functions I use";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fail" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "fail";
       version = "4.9.0.0";
       sha256 = "18nlj6xvnggy61gwbyrpmvbdkq928wv0wx2zcsljb52kbhddnp3d";
       doHaddock = false;
       homepage = "https://prime.haskell.org/wiki/Libraries/Proposals/MonadFail";
       description = "Forward-compatible MonadFail class";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fast-logger" = callPackage
    ({ mkDerivation, array, auto-update, base, bytestring, directory
     , easy-file, filepath, hspec, text, unix, unix-time
     }:
     mkDerivation {
       pname = "fast-logger";
       version = "2.4.11";
       sha256 = "1ad2vq4nifdxshqk9yrmghqizhkgybfz134kpr6padglb2mxxrdv";
       libraryHaskellDepends = [
         array auto-update base bytestring directory easy-file filepath text
         unix unix-time
       ];
       testHaskellDepends = [ base bytestring directory hspec ];
       homepage = "https://github.com/kazu-yamamoto/logger";
       description = "A fast logging system";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fgl" = callPackage
    ({ mkDerivation, array, base, containers, deepseq, transformers }:
     mkDerivation {
       pname = "fgl";
       version = "5.6.0.0";
       sha256 = "1i6cp4b3w7sjk7y1dq3fh6bci2sm5h3lnbbaw9ln19nwncg2wwll";
       libraryHaskellDepends = [
         array base containers deepseq transformers
       ];
       doCheck = false;
       description = "Martin Erwig's Functional Graph Library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "file-embed" = callPackage
    ({ mkDerivation, base, bytestring, directory, filepath
     , template-haskell
     }:
     mkDerivation {
       pname = "file-embed";
       version = "0.0.10.1";
       sha256 = "0lj164cnzqyd487mli91nnr7137a4h4qsasfwsnsh77sx12fpk9k";
       libraryHaskellDepends = [
         base bytestring directory filepath template-haskell
       ];
       testHaskellDepends = [ base filepath ];
       homepage = "https://github.com/snoyberg/file-embed";
       description = "Use Template Haskell to embed file contents directly";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "filemanip" = callPackage
    ({ mkDerivation, base, bytestring, directory, filepath, mtl
     , unix-compat
     }:
     mkDerivation {
       pname = "filemanip";
       version = "0.3.6.3";
       sha256 = "0ilqr8jv41zxcj5qyicg29m8s30b9v70x6f9h2h2rw5ap8bxldl8";
       libraryHaskellDepends = [
         base bytestring directory filepath mtl unix-compat
       ];
       homepage = "https://github.com/bos/filemanip";
       description = "Expressive file and directory manipulation for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fingertree" = callPackage
    ({ mkDerivation, base, HUnit, QuickCheck, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "fingertree";
       version = "0.1.4.1";
       sha256 = "192fyzv0pn1437wdpqg1l80rswkk4rw3w61r4bq7dhv354bdqy4p";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base HUnit QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       description = "Generic finger-tree structure, with example instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fingertree-psqueue" = callPackage
    ({ mkDerivation, base, fingertree }:
     mkDerivation {
       pname = "fingertree-psqueue";
       version = "0.3";
       sha256 = "14kc0ijx44q7whniickjj3h9ag1pixn51dlxjs6n2ypaclcjz34z";
       libraryHaskellDepends = [ base fingertree ];
       description = "Implementation of priority search queues as finger trees";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "fixed" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "fixed";
       version = "0.2.1.1";
       sha256 = "1qhmwx8iqshns0crmr9d2f8hm65jxbcp3dvv0c39v34ra7if3a94";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/ekmett/fixed";
       description = "Signed 15.16 precision fixed point arithmetic";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "foldl" = callPackage
    ({ mkDerivation, base, bytestring, comonad, containers
     , contravariant, criterion, hashable, mwc-random, primitive
     , profunctors, semigroups, text, transformers, unordered-containers
     , vector, vector-builder
     }:
     mkDerivation {
       pname = "foldl";
       version = "1.3.7";
       sha256 = "113966zyk1jj8l1k1izfix8bc1hmpr9w1zahkz592f56wmvmy8kn";
       libraryHaskellDepends = [
         base bytestring comonad containers contravariant hashable
         mwc-random primitive profunctors semigroups text transformers
         unordered-containers vector vector-builder
       ];
       benchmarkHaskellDepends = [ base criterion ];
       description = "Composable, streaming, and efficient left folds";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "formatting" = callPackage
    ({ mkDerivation, array, base, bytestring, clock, ghc-prim, hspec
     , integer-gmp, old-locale, scientific, semigroups, text, time
     , transformers
     }:
     mkDerivation {
       pname = "formatting";
       version = "6.3.6";
       sha256 = "06nkm9scy3a41v4m7npgkl9lvy5py6v7chsx0yhdy4pr4mvdna3a";
       libraryHaskellDepends = [
         array base bytestring clock ghc-prim integer-gmp old-locale
         scientific semigroups text time transformers
       ];
       testHaskellDepends = [ base hspec semigroups ];
       description = "Combinator-based type-safe formatting (like printf() or FORMAT)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "foundation" = callPackage
    ({ mkDerivation, base, basement, gauge, ghc-prim }:
     mkDerivation {
       pname = "foundation";
       version = "0.0.21";
       sha256 = "1q43y8wfj0wf9gdq2kzphwjwq6m5pvryy1lqgk954aq5z3ks1lsf";
       libraryHaskellDepends = [ base basement ghc-prim ];
       testHaskellDepends = [ base basement ];
       benchmarkHaskellDepends = [ base basement gauge ];
       homepage = "https://github.com/haskell-foundation/foundation";
       description = "Alternative prelude with batteries and no dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "free" = callPackage
    ({ mkDerivation, base, bifunctors, comonad, containers
     , distributive, exceptions, mtl, profunctors, semigroupoids
     , semigroups, template-haskell, transformers, transformers-base
     , transformers-compat
     }:
     mkDerivation {
       pname = "free";
       version = "5.0.2";
       sha256 = "15m3n9vhz7z3kzv1w3wlfa3x8jp4cbrkwmrcjr7jlx39iqffn1gg";
       libraryHaskellDepends = [
         base bifunctors comonad containers distributive exceptions mtl
         profunctors semigroupoids semigroups template-haskell transformers
         transformers-base transformers-compat
       ];
       homepage = "http://github.com/ekmett/free/";
       description = "Monads for free";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "gauge" = callPackage
    ({ mkDerivation, base, basement, bytestring, deepseq, directory
     , foundation, process, vector
     }:
     mkDerivation {
       pname = "gauge";
       version = "0.2.3";
       sha256 = "0slsimv2zn9yhakxy2wdyfj6bgjd1p65wp6nr8j0ba7df64xykjs";
       libraryHaskellDepends = [
         base basement deepseq directory process vector
       ];
       testHaskellDepends = [
         base bytestring deepseq directory foundation
       ];
       benchmarkHaskellDepends = [ base ];
       homepage = "https://github.com/vincenthz/hs-gauge";
       description = "small framework for performance measurement and analysis";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "generic-deriving" = callPackage
    ({ mkDerivation, base, containers, ghc-prim, hspec, hspec-discover
     , template-haskell, th-abstraction
     }:
     mkDerivation {
       pname = "generic-deriving";
       version = "1.12.2";
       sha256 = "1i7d6cpj9yhaqb79zays3nqchhaacacjz9bkc0zlwj73y5gvi22n";
       revision = "1";
       editedCabalFile = "0gr20ypr6s0183wmrhmia0zvpbn4dmfyr3wksrkrqj4i8nhj42fz";
       libraryHaskellDepends = [
         base containers ghc-prim template-haskell th-abstraction
       ];
       testHaskellDepends = [ base hspec template-haskell ];
       testToolDepends = [ hspec-discover ];
       homepage = "https://github.com/dreixel/generic-deriving";
       description = "Generic programming library for generalised deriving";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "generics-sop" = callPackage
    ({ mkDerivation, base, deepseq, ghc-prim, template-haskell }:
     mkDerivation {
       pname = "generics-sop";
       version = "0.3.2.0";
       sha256 = "168v62i845jh9jbfaz3ldz8svz4wmzq9mf2vhb7pxlnbkk8fqq1h";
       revision = "2";
       editedCabalFile = "0hc00hjgxm7vzq146d9kwapgqnjbhdi0c7icyvrpc2fhc4cnwlwf";
       libraryHaskellDepends = [ base deepseq ghc-prim template-haskell ];
       testHaskellDepends = [ base ];
       description = "Generic Programming using True Sums of Products";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghc-paths" = callPackage
    ({ mkDerivation, base, Cabal, directory }:
     mkDerivation {
       pname = "ghc-paths";
       version = "0.1.0.9";
       sha256 = "0ibrr1dxa35xx20cpp8jzgfak1rdmy344dfwq4vlq013c6w8z9mg";
       revision = "3";
       editedCabalFile = "1gx47xbm3qviqccnbsibzkfnlzljvls33jh1ry4l506yvfnf4j10";
       setupHaskellDepends = [ base Cabal directory ];
       libraryHaskellDepends = [ base ];
       description = "Knowledge of GHC's installation directories";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "ghc-tcplugins-extra" = callPackage
    ({ mkDerivation, base, ghc }:
     mkDerivation {
       pname = "ghc-tcplugins-extra";
       version = "0.2.5";
       sha256 = "0xkq24dr2div9d9hr4rpz65968syqjignn9xn5q48vmzh1m1xwws";
       libraryHaskellDepends = [ base ghc ];
       homepage = "http://github.com/clash-lang/ghc-tcplugins-extra";
       description = "Utilities for writing GHC type-checker plugins";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "happy" = callPackage
    ({ mkDerivation, array, base, Cabal, containers, directory
     , filepath, mtl, process
     }:
     mkDerivation {
       pname = "happy";
       version = "1.19.9";
       sha256 = "138xpxdb7x62lpmgmb6b3v3vgdqqvqn4273jaap3mjmc2gla709y";
       revision = "2";
       editedCabalFile = "1zxi8zfwiwxidrhr0yj5srpzp32z66sld9xv0k4yz7046rkl3577";
       isLibrary = false;
       isExecutable = true;
       setupHaskellDepends = [ base Cabal directory filepath ];
       executableHaskellDepends = [ array base containers mtl ];
       testHaskellDepends = [ base process ];
       doHaddock = false;
       doCheck = false;
       homepage = "https://www.haskell.org/happy/";
       description = "Happy is a parser generator for Haskell";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "hashable" = callPackage
    ({ mkDerivation, base, bytestring, criterion, deepseq, ghc-prim
     , HUnit, integer-gmp, QuickCheck, random, siphash, test-framework
     , test-framework-hunit, test-framework-quickcheck2, text, unix
     }:
     mkDerivation {
       pname = "hashable";
       version = "1.2.7.0";
       sha256 = "1gra8gq3kb7b2sd845h55yxlrfqx3ii004c6vjhga8v0b30fzdgc";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring deepseq ghc-prim integer-gmp text
       ];
       testHaskellDepends = [
         base bytestring ghc-prim HUnit QuickCheck random test-framework
         test-framework-hunit test-framework-quickcheck2 text unix
       ];
       benchmarkHaskellDepends = [
         base bytestring criterion ghc-prim integer-gmp siphash text
       ];
       homepage = "http://github.com/tibbe/hashable";
       description = "A class for types that can be converted to a hash value";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hashtables" = callPackage
    ({ mkDerivation, base, ghc-prim, hashable, primitive, vector }:
     mkDerivation {
       pname = "hashtables";
       version = "1.2.3.1";
       sha256 = "1giw9caajr07slf09j7zry9b0kvm4yj9q78zy1mawzi6gk3wglcg";
       libraryHaskellDepends = [
         base ghc-prim hashable primitive vector
       ];
       homepage = "http://github.com/gregorycollins/hashtables";
       description = "Mutable hash tables in the ST monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-lexer" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "haskell-lexer";
       version = "1.0.1";
       sha256 = "0rj3r1pk88hh3sk3mj61whp8czz5kpxhbc78xlr04bxwqjrjmm6p";
       libraryHaskellDepends = [ base ];
       description = "A fully compliant Haskell 98 lexer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-src-exts" = callPackage
    ({ mkDerivation, array, base, cpphs, ghc-prim, happy, pretty }:
     mkDerivation {
       pname = "haskell-src-exts";
       version = "1.20.2";
       sha256 = "1sm3z4v1p5yffg01ldgavz71s3bvfhjfa13k428rk14bpkl8crlz";
       libraryHaskellDepends = [ array base cpphs ghc-prim pretty ];
       libraryToolDepends = [ happy ];
       doCheck = false;
       homepage = "https://github.com/haskell-suite/haskell-src-exts";
       description = "Manipulating Haskell source: abstract syntax, lexer, parser, and pretty-printer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-src-exts-util" = callPackage
    ({ mkDerivation, base, containers, data-default, haskell-src-exts
     , semigroups, transformers, uniplate
     }:
     mkDerivation {
       pname = "haskell-src-exts-util";
       version = "0.2.3";
       sha256 = "1803718paq89f8pdck4mb88hv2k1ah9lxzq0lgjgwi9n88ryycz8";
       libraryHaskellDepends = [
         base containers data-default haskell-src-exts semigroups
         transformers uniplate
       ];
       homepage = "https://github.com/pepeiborra/haskell-src-exts-util";
       description = "Helper functions for working with haskell-src-exts trees";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "haskell-src-meta" = callPackage
    ({ mkDerivation, base, haskell-src-exts, HUnit, pretty, syb
     , template-haskell, test-framework, test-framework-hunit
     , th-orphans
     }:
     mkDerivation {
       pname = "haskell-src-meta";
       version = "0.8.0.3";
       sha256 = "08jq156zv4m0fjq6712n99c1jwxnpa6kj6sq8ch0r1l0a1ay6ww4";
       libraryHaskellDepends = [
         base haskell-src-exts pretty syb template-haskell th-orphans
       ];
       testHaskellDepends = [
         base haskell-src-exts HUnit pretty template-haskell test-framework
         test-framework-hunit
       ];
       description = "Parse source to template-haskell abstract syntax";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "heaps" = callPackage
    ({ mkDerivation, base, Cabal, cabal-doctest, directory, doctest
     , filepath
     }:
     mkDerivation {
       pname = "heaps";
       version = "0.3.6";
       sha256 = "1cnxgmxxvl053yv93vcz5fnla4iir5g9wr697n88ysdyybbkq70q";
       revision = "3";
       editedCabalFile = "0k6wsm1hwn3vaxdvw8p7cidxg7p8zply2ig4w4qrbpyjhl6dj9x9";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base directory doctest filepath ];
       homepage = "http://github.com/ekmett/heaps/";
       description = "Asymptotically optimal Brodal/Okasaki heaps";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hedgehog" = callPackage
    ({ mkDerivation, ansi-terminal, async, base, bytestring
     , concurrent-output, containers, directory, exceptions
     , lifted-async, mmorph, monad-control, mtl, pretty-show, primitive
     , random, resourcet, semigroups, stm, template-haskell, text
     , th-lift, time, transformers, transformers-base, unix
     , wl-pprint-annotated
     }:
     mkDerivation {
       pname = "hedgehog";
       version = "0.5.3";
       sha256 = "1vv8vnkv6d0fvm0vwfm11ajyd9da3hfy2wdkd4p7dhfyscq9cwx4";
       revision = "1";
       editedCabalFile = "0hhzkl88xk9j62897y11f4xx84qdh0mdap55iw30cl4zwlgp10ir";
       libraryHaskellDepends = [
         ansi-terminal async base bytestring concurrent-output containers
         directory exceptions lifted-async mmorph monad-control mtl
         pretty-show primitive random resourcet semigroups stm
         template-haskell text th-lift time transformers transformers-base
         unix wl-pprint-annotated
       ];
       testHaskellDepends = [
         base containers pretty-show semigroups text transformers
       ];
       homepage = "https://hedgehog.qa";
       description = "Hedgehog will eat all your bugs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "here" = callPackage
    ({ mkDerivation, base, haskell-src-meta, mtl, parsec
     , template-haskell
     }:
     mkDerivation {
       pname = "here";
       version = "1.2.13";
       sha256 = "001wfyvigl2xswqysnpignkl124hybf833875mkcsn8yp8krqvs0";
       libraryHaskellDepends = [
         base haskell-src-meta mtl parsec template-haskell
       ];
       homepage = "https://github.com/tmhedberg/here";
       description = "Here docs & interpolated strings via quasiquotation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hex" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "hex";
       version = "0.1.2";
       sha256 = "1v31xiaivrrn0q2jz8919wvkjplv1kxna5ajhsj701fqxm1i5vhj";
       libraryHaskellDepends = [ base bytestring ];
       description = "Convert strings into hexadecimal and back";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hlint" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, base, bytestring, cmdargs
     , containers, cpphs, data-default, directory, extra, filepath
     , haskell-src-exts, haskell-src-exts-util, hscolour, process
     , refact, text, transformers, uniplate, unordered-containers
     , vector, yaml
     }:
     mkDerivation {
       pname = "hlint";
       version = "2.1.8";
       sha256 = "1kkmgqbw2n4sl7wcqbdqv54n7p5zjfx8c970s1lw25mfs3ryn4wp";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         aeson ansi-terminal base bytestring cmdargs containers cpphs
         data-default directory extra filepath haskell-src-exts
         haskell-src-exts-util hscolour process refact text transformers
         uniplate unordered-containers vector yaml
       ];
       executableHaskellDepends = [ base ];
       homepage = "https://github.com/ndmitchell/hlint#readme";
       description = "Source code suggestions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hostname" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "hostname";
       version = "1.0";
       sha256 = "0p6gm4328946qxc295zb6vhwhf07l1fma82vd0siylnsnsqxlhwv";
       libraryHaskellDepends = [ base ];
       description = "A very simple package providing a cross-platform means of determining the hostname";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hscolour" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "hscolour";
       version = "1.24.4";
       sha256 = "079jwph4bwllfp03yfr26s5zc6m6kw3nhb1cggrifh99haq34cr4";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base containers ];
       executableHaskellDepends = [ base containers ];
       homepage = "http://code.haskell.org/~malcolm/hscolour/";
       description = "Colourise Haskell code";
       license = "LGPL";
     }) {};
  "hspec" = callPackage
    ({ mkDerivation, base, call-stack, directory, hspec-core
     , hspec-discover, hspec-expectations, hspec-meta, HUnit, QuickCheck
     , stringbuilder, transformers
     }:
     mkDerivation {
       pname = "hspec";
       version = "2.4.8";
       sha256 = "18pddkfz661b1nr1nziq8cnmlzxiqzzmrcrk3iwn476vi3bf1m4l";
       libraryHaskellDepends = [
         base call-stack hspec-core hspec-discover hspec-expectations HUnit
         QuickCheck transformers
       ];
       testHaskellDepends = [
         base call-stack directory hspec-core hspec-discover
         hspec-expectations hspec-meta HUnit QuickCheck stringbuilder
         transformers
       ];
       homepage = "http://hspec.github.io/";
       description = "A Testing Framework for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-core" = callPackage
    ({ mkDerivation, ansi-terminal, array, base, call-stack, deepseq
     , directory, filepath, hspec-expectations, hspec-meta, HUnit
     , process, QuickCheck, quickcheck-io, random, setenv, silently, stm
     , temporary, tf-random, time, transformers
     }:
     mkDerivation {
       pname = "hspec-core";
       version = "2.4.8";
       sha256 = "02zr6n7mqdncvf1braf38zjdplaxrkg11x9k8717k4yg57585ji4";
       libraryHaskellDepends = [
         ansi-terminal array base call-stack deepseq directory filepath
         hspec-expectations HUnit QuickCheck quickcheck-io random setenv stm
         tf-random time transformers
       ];
       testHaskellDepends = [
         ansi-terminal array base call-stack deepseq directory filepath
         hspec-expectations hspec-meta HUnit process QuickCheck
         quickcheck-io random setenv silently stm temporary tf-random time
         transformers
       ];
       testTarget = "--test-option=--skip --test-option='Test.Hspec.Core.Runner.hspecResult runs specs in parallel'";
       homepage = "http://hspec.github.io/";
       description = "A Testing Framework for Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-discover" = callPackage
    ({ mkDerivation, base, directory, filepath, hspec-meta, QuickCheck
     }:
     mkDerivation {
       pname = "hspec-discover";
       version = "2.4.8";
       sha256 = "0llwdfpjgfpi7dr8caw0fldb9maqznmqh4awkvx72bz538gqmlka";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base directory filepath ];
       executableHaskellDepends = [ base directory filepath ];
       testHaskellDepends = [
         base directory filepath hspec-meta QuickCheck
       ];
       homepage = "http://hspec.github.io/";
       description = "Automatically discover and run Hspec tests";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-expectations" = callPackage
    ({ mkDerivation, base, call-stack, HUnit, nanospec }:
     mkDerivation {
       pname = "hspec-expectations";
       version = "0.8.2";
       sha256 = "1vxl9zazbaapijr6zmcj72j9wf7ka1pirrjbwddwwddg3zm0g5l1";
       libraryHaskellDepends = [ base call-stack HUnit ];
       testHaskellDepends = [ base call-stack HUnit nanospec ];
       homepage = "https://github.com/hspec/hspec-expectations#readme";
       description = "Catchy combinators for HUnit";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hspec-meta" = callPackage
    ({ mkDerivation, ansi-terminal, array, async, base, call-stack
     , deepseq, directory, filepath, hspec-expectations, HUnit
     , QuickCheck, quickcheck-io, random, setenv, time, transformers
     }:
     mkDerivation {
       pname = "hspec-meta";
       version = "2.4.6";
       sha256 = "0qmvk01n79j6skn79r6zalg2pd0x0nqqn9qn8mhg0pgyzcdnfc9b";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         ansi-terminal array async base call-stack deepseq directory
         filepath hspec-expectations HUnit QuickCheck quickcheck-io random
         setenv time transformers
       ];
       executableHaskellDepends = [
         ansi-terminal array async base call-stack deepseq directory
         filepath hspec-expectations HUnit QuickCheck quickcheck-io random
         setenv time transformers
       ];
       homepage = "http://hspec.github.io/";
       description = "A version of Hspec which is used to test Hspec itself";
       license = stdenv.lib.licenses.mit;
     }) {};
  "http-api-data" = callPackage
    ({ mkDerivation, attoparsec, attoparsec-iso8601, base, bytestring
     , Cabal, cabal-doctest, containers, hashable, http-types, text
     , time, time-locale-compat, unordered-containers, uri-bytestring
     , uuid-types
     }:
     mkDerivation {
       pname = "http-api-data";
       version = "0.3.7.2";
       sha256 = "10kcpxl9m1q2dl4z2ig6ysrhrdmdg35skfh8kwx0h7f0n7d6wlb8";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         attoparsec attoparsec-iso8601 base bytestring containers hashable
         http-types text time time-locale-compat unordered-containers
         uri-bytestring uuid-types
       ];
       doCheck = false;
       homepage = "http://github.com/fizruk/http-api-data";
       description = "Converting to/from HTTP API data like URL pieces, headers and query parameters";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http-client" = callPackage
    ({ mkDerivation, array, async, base, blaze-builder, bytestring
     , case-insensitive, containers, cookie, deepseq, directory
     , exceptions, filepath, ghc-prim, hspec, http-types, memory
     , mime-types, monad-control, network, network-uri, random, stm
     , streaming-commons, text, time, transformers, zlib
     }:
     mkDerivation {
       pname = "http-client";
       version = "0.5.13.1";
       sha256 = "0szwbgvkkdz56lgi91armkagmb7nnfwbpp4j7cm9zhmffv3ba8g1";
       libraryHaskellDepends = [
         array base blaze-builder bytestring case-insensitive containers
         cookie deepseq exceptions filepath ghc-prim http-types memory
         mime-types network network-uri random stm streaming-commons text
         time transformers
       ];
       testHaskellDepends = [
         async base blaze-builder bytestring case-insensitive containers
         deepseq directory hspec http-types monad-control network
         network-uri streaming-commons text time transformers zlib
       ];
       homepage = "https://github.com/snoyberg/http-client";
       description = "An HTTP client engine";
       license = stdenv.lib.licenses.mit;
     }) {};
  "http-date" = callPackage
    ({ mkDerivation, array, attoparsec, base, bytestring, doctest
     , hspec, old-locale, time
     }:
     mkDerivation {
       pname = "http-date";
       version = "0.0.8";
       sha256 = "09slbzqayjnqqz9zybk7slgzvizgplikqgg4b2flzgks91466k0g";
       libraryHaskellDepends = [ array attoparsec base bytestring time ];
       testHaskellDepends = [
         base bytestring doctest hspec old-locale time
       ];
       description = "HTTP Date parser/formatter";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http-media" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, containers
     , QuickCheck, test-framework, test-framework-quickcheck2
     , utf8-string
     }:
     mkDerivation {
       pname = "http-media";
       version = "0.7.1.2";
       sha256 = "01vvrd6yb2aykha7y1c13ylnkyws2wy68vqbdb7kmbzwbdxdb4zy";
       revision = "1";
       editedCabalFile = "0lxlig3mhw52ixqq65c9fzawviia2fl00d7hn1diny964h8klwgc";
       libraryHaskellDepends = [
         base bytestring case-insensitive containers utf8-string
       ];
       testHaskellDepends = [
         base bytestring case-insensitive containers QuickCheck
         test-framework test-framework-quickcheck2 utf8-string
       ];
       homepage = "https://github.com/zmthy/http-media";
       description = "Processing HTTP Content-Type and Accept headers";
       license = stdenv.lib.licenses.mit;
     }) {};
  "http-types" = callPackage
    ({ mkDerivation, array, base, bytestring, case-insensitive, doctest
     , hspec, QuickCheck, quickcheck-instances, text
     }:
     mkDerivation {
       pname = "http-types";
       version = "0.12.1";
       sha256 = "1wv9k6nlvkdsxwlr7gaynphvzmvi5211gvwq96mbcxgk51a739rz";
       libraryHaskellDepends = [
         array base bytestring case-insensitive text
       ];
       testHaskellDepends = [
         base bytestring doctest hspec QuickCheck quickcheck-instances text
       ];
       homepage = "https://github.com/aristidb/http-types";
       description = "Generic HTTP types for Haskell (for both client and server code)";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "http2" = callPackage
    ({ mkDerivation, aeson, aeson-pretty, array, base, bytestring
     , bytestring-builder, case-insensitive, containers, criterion
     , directory, doctest, filepath, Glob, hashtables, heaps, hex, hspec
     , mwc-random, psqueues, stm, text, unordered-containers, vector
     , word8
     }:
     mkDerivation {
       pname = "http2";
       version = "1.6.3";
       sha256 = "0hww0rfsv6lqx62qzycbcqy5q6rh9k09qkyjkdm5m1sp1z50wqk1";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         array base bytestring bytestring-builder case-insensitive
         containers psqueues stm
       ];
       testHaskellDepends = [
         aeson aeson-pretty array base bytestring bytestring-builder
         case-insensitive containers directory doctest filepath Glob hex
         hspec psqueues stm text unordered-containers vector word8
       ];
       benchmarkHaskellDepends = [
         array base bytestring case-insensitive containers criterion
         hashtables heaps mwc-random psqueues stm
       ];
       homepage = "https://github.com/kazu-yamamoto/http2";
       description = "HTTP/2 library including frames, priority queues and HPACK";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "hxt" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, deepseq
     , directory, filepath, hxt-charproperties, hxt-regex-xmlschema
     , hxt-unicode, mtl, network-uri, parsec
     }:
     mkDerivation {
       pname = "hxt";
       version = "9.3.1.16";
       sha256 = "1qq3ykgn355rx242xjcbqqksgvwr6k2fdj5phw4iv28qqxff6m8d";
       configureFlags = [ "-fnetwork-uri" ];
       libraryHaskellDepends = [
         base binary bytestring containers deepseq directory filepath
         hxt-charproperties hxt-regex-xmlschema hxt-unicode mtl network-uri
         parsec
       ];
       homepage = "https://github.com/UweSchmidt/hxt";
       description = "A collection of tools for processing XML with Haskell";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hxt-charproperties" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "hxt-charproperties";
       version = "9.2.0.1";
       sha256 = "1mml8wglvagqq891rchgli6r8rnkwrqhgsxfl6kb5403pzb18rp4";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/UweSchmidt/hxt";
       description = "Character properties and classes for XML and Unicode";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hxt-regex-xmlschema" = callPackage
    ({ mkDerivation, base, bytestring, criterion, deepseq, HUnit
     , hxt-charproperties, parsec, text
     }:
     mkDerivation {
       pname = "hxt-regex-xmlschema";
       version = "9.2.0.3";
       sha256 = "1c4jr0439f5yc05h7iz53fa47g6l2wrvqp6gvwf01mlqajk3nx7l";
       libraryHaskellDepends = [
         base bytestring hxt-charproperties parsec text
       ];
       testHaskellDepends = [ base bytestring HUnit parsec text ];
       benchmarkHaskellDepends = [
         base bytestring criterion deepseq parsec text
       ];
       homepage = "http://www.haskell.org/haskellwiki/Regular_expressions_for_XML_Schema";
       description = "A regular expression library for W3C XML Schema regular expressions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "hxt-unicode" = callPackage
    ({ mkDerivation, base, hxt-charproperties }:
     mkDerivation {
       pname = "hxt-unicode";
       version = "9.0.2.4";
       sha256 = "0rj48cy8z4fl3zpg5bpa458kqr83adav6jnqv4i71dclpprj6n3v";
       libraryHaskellDepends = [ base hxt-charproperties ];
       homepage = "https://github.com/UweSchmidt/hxt";
       description = "Unicode en-/decoding functions for utf8, iso-latin-* and other encodings";
       license = stdenv.lib.licenses.mit;
     }) {};
  "ieee754" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "ieee754";
       version = "0.8.0";
       sha256 = "1lcs521g9lzy9d7337vg4w7q7s8500rfqy7rcifcz6pm6yfgyb8f";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/patperry/hs-ieee754";
       description = "Utilities for dealing with IEEE floating point numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "integer-logarithms" = callPackage
    ({ mkDerivation, array, base, ghc-prim, integer-gmp }:
     mkDerivation {
       pname = "integer-logarithms";
       version = "1.0.2.1";
       sha256 = "1wj8kgjg5bn2yrs4zh9qfjv85cx6w998j9pi39yrbv305944mb9j";
       libraryHaskellDepends = [ array base ghc-prim integer-gmp ];
       doCheck = false;
       homepage = "https://github.com/phadej/integer-logarithms";
       description = "Integer logarithms";
       license = stdenv.lib.licenses.mit;
     }) {};
  "iproute" = callPackage
    ({ mkDerivation, appar, base, byteorder, containers, doctest, hspec
     , network, QuickCheck, safe
     }:
     mkDerivation {
       pname = "iproute";
       version = "1.7.5";
       sha256 = "1vw1nm3s8vz1hqnjnqd3wh5rr4q3m2r4izn5ynhf93h9185qwqzd";
       libraryHaskellDepends = [
         appar base byteorder containers network
       ];
       testHaskellDepends = [
         appar base byteorder containers doctest hspec network QuickCheck
         safe
       ];
       homepage = "http://www.mew.org/~kazu/proj/iproute/";
       description = "IP Routing Table";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "js-flot" = callPackage
    ({ mkDerivation, base, HTTP }:
     mkDerivation {
       pname = "js-flot";
       version = "0.8.3";
       sha256 = "0yjyzqh3qzhy5h3nql1fckw0gcfb0f4wj9pm85nafpfqp2kg58hv";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base HTTP ];
       homepage = "https://github.com/ndmitchell/js-flot#readme";
       description = "Obtain minified flot code";
       license = stdenv.lib.licenses.mit;
     }) {};
  "js-jquery" = callPackage
    ({ mkDerivation, base, HTTP }:
     mkDerivation {
       pname = "js-jquery";
       version = "3.3.1";
       sha256 = "16q68jzbs7kp07dnq8cprdcc8fd41rim38039vg0w4x11lgniq70";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base HTTP ];
       homepage = "https://github.com/ndmitchell/js-jquery#readme";
       description = "Obtain minified jQuery code";
       license = stdenv.lib.licenses.mit;
     }) {};
  "kan-extensions" = callPackage
    ({ mkDerivation, adjunctions, array, base, comonad, containers
     , contravariant, distributive, fail, free, mtl, profunctors
     , semigroupoids, tagged, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "kan-extensions";
       version = "5.1";
       sha256 = "019jyrilk97i5bj8v044ig03m66h02q4b073m1fksrk7y9c8wgqr";
       revision = "1";
       editedCabalFile = "1xaam291gxmsbibi2ai4l6c36iwkpmfy6vik1916j6jp326pa3z9";
       libraryHaskellDepends = [
         adjunctions array base comonad containers contravariant
         distributive fail free mtl profunctors semigroupoids tagged
         transformers transformers-compat
       ];
       homepage = "http://github.com/ekmett/kan-extensions/";
       description = "Kan extensions, Kan lifts, the Yoneda lemma, and (co)density (co)monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "language-haskell-extract" = callPackage
    ({ mkDerivation, base, regex-posix, template-haskell }:
     mkDerivation {
       pname = "language-haskell-extract";
       version = "0.2.4";
       sha256 = "1nxcs7g8a1sp91bzpy4cj6s31k5pvc3gvig04cbrggv5cvjidnhl";
       libraryHaskellDepends = [ base regex-posix template-haskell ];
       homepage = "http://github.com/finnsson/template-helper";
       description = "Module to automatically extract functions from the local code";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lens" = callPackage
    ({ mkDerivation, array, base, base-orphans, bifunctors, bytestring
     , Cabal, cabal-doctest, call-stack, comonad, containers
     , contravariant, criterion, deepseq, directory, distributive
     , doctest, exceptions, filepath, free, generic-deriving, ghc-prim
     , hashable, HUnit, kan-extensions, mtl, nats, parallel, profunctors
     , QuickCheck, reflection, semigroupoids, semigroups, simple-reflect
     , tagged, template-haskell, test-framework, test-framework-hunit
     , test-framework-quickcheck2, test-framework-th, text
     , th-abstraction, transformers, transformers-compat
     , unordered-containers, vector, void
     }:
     mkDerivation {
       pname = "lens";
       version = "4.16.1";
       sha256 = "1im4drhbydbawd6i0jsrzpqihnmx4ywpkg7yg94ddwsw3mxwkgpm";
       revision = "2";
       editedCabalFile = "11h83lj5mba4grhz1qx3irz10ysm9c3k7k6i6xv2cr60q8xin3ri";
       setupHaskellDepends = [ base Cabal cabal-doctest filepath ];
       libraryHaskellDepends = [
         array base base-orphans bifunctors bytestring call-stack comonad
         containers contravariant distributive exceptions filepath free
         ghc-prim hashable kan-extensions mtl parallel profunctors
         reflection semigroupoids semigroups tagged template-haskell text
         th-abstraction transformers transformers-compat
         unordered-containers vector void
       ];
       testHaskellDepends = [
         base bytestring containers deepseq directory doctest filepath
         generic-deriving HUnit mtl nats parallel QuickCheck semigroups
         simple-reflect test-framework test-framework-hunit
         test-framework-quickcheck2 test-framework-th text transformers
         unordered-containers vector
       ];
       benchmarkHaskellDepends = [
         base bytestring comonad containers criterion deepseq
         generic-deriving transformers unordered-containers vector
       ];
       homepage = "http://github.com/ekmett/lens/";
       description = "Lenses, Folds and Traversals";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "lifted-async" = callPackage
    ({ mkDerivation, async, base, constraints, criterion, deepseq
     , HUnit, lifted-base, monad-control, mtl, tasty, tasty-hunit
     , tasty-th, transformers-base
     }:
     mkDerivation {
       pname = "lifted-async";
       version = "0.9.3.3";
       sha256 = "1gqd4ih72mky1s97120yx9gmabaxb1l54b3jwijsl8fxng5djdxf";
       libraryHaskellDepends = [
         async base constraints lifted-base monad-control transformers-base
       ];
       testHaskellDepends = [
         async base HUnit lifted-base monad-control mtl tasty tasty-hunit
         tasty-th
       ];
       benchmarkHaskellDepends = [ async base criterion deepseq ];
       homepage = "https://github.com/maoe/lifted-async";
       description = "Run lifted IO operations asynchronously and wait for their results";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "lifted-base" = callPackage
    ({ mkDerivation, base, criterion, monad-control, monad-peel
     , transformers, transformers-base
     }:
     mkDerivation {
       pname = "lifted-base";
       version = "0.2.3.12";
       sha256 = "1i8p8d3rkdh21bhgjjh32vd7qqjr7jq7p59qds0aw2kmargsjd61";
       libraryHaskellDepends = [ base monad-control transformers-base ];
       benchmarkHaskellDepends = [
         base criterion monad-control monad-peel transformers
       ];
       doCheck = false;
       homepage = "https://github.com/basvandijk/lifted-base";
       description = "lifted IO operations from the base library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "logging-facade" = callPackage
    ({ mkDerivation, base, call-stack, hspec, transformers }:
     mkDerivation {
       pname = "logging-facade";
       version = "0.3.0";
       sha256 = "0d0lwxxgd16is9aw6v3ps4r9prv3dj8xscmm45fvzq3nicjiawcf";
       libraryHaskellDepends = [ base call-stack transformers ];
       testHaskellDepends = [ base hspec ];
       homepage = "https://github.com/sol/logging-facade#readme";
       description = "Simple logging abstraction that allows multiple back-ends";
       license = stdenv.lib.licenses.mit;
     }) {};
  "logict" = callPackage
    ({ mkDerivation, base, mtl }:
     mkDerivation {
       pname = "logict";
       version = "0.6.0.2";
       sha256 = "07hnirv6snnym2r7iijlfz00b60jpy2856zvqxh989q0in7bd0hi";
       libraryHaskellDepends = [ base mtl ];
       homepage = "http://code.haskell.org/~dolio/";
       description = "A backtracking logic-programming monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "math-functions" = callPackage
    ({ mkDerivation, base, deepseq, erf, HUnit, primitive, QuickCheck
     , test-framework, test-framework-hunit, test-framework-quickcheck2
     , vector, vector-th-unbox
     }:
     mkDerivation {
       pname = "math-functions";
       version = "0.2.1.0";
       sha256 = "1sv5vabsx332v1lpb6v3jv4zrzvpx1n7yprzd8wlcda5vsc5a6zp";
       libraryHaskellDepends = [
         base deepseq primitive vector vector-th-unbox
       ];
       testHaskellDepends = [
         base deepseq erf HUnit primitive QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 vector
         vector-th-unbox
       ];
       doCheck = false;
       homepage = "https://github.com/bos/math-functions";
       description = "Special functions and Chebyshev polynomials";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "megaparsec" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, containers
     , criterion, deepseq, hspec, hspec-expectations, mtl
     , parser-combinators, QuickCheck, scientific, text, transformers
     , weigh
     }:
     mkDerivation {
       pname = "megaparsec";
       version = "6.4.1";
       sha256 = "0w0kw8g7c6c3sp0fpgfqjc2w032dv9s7jnyn1dx71hk5mifh2h6y";
       revision = "2";
       editedCabalFile = "0vh4l2kl9nfxlr8l82qicldybwiv6vbksi3jdk0xjzxmkvgm0jnf";
       libraryHaskellDepends = [
         base bytestring case-insensitive containers deepseq mtl
         parser-combinators scientific text transformers
       ];
       testHaskellDepends = [
         base bytestring containers hspec hspec-expectations mtl QuickCheck
         scientific text transformers
       ];
       benchmarkHaskellDepends = [ base criterion deepseq text weigh ];
       homepage = "https://github.com/mrkkrp/megaparsec";
       description = "Monadic parser combinators";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "memory" = callPackage
    ({ mkDerivation, base, basement, bytestring, deepseq, foundation
     , ghc-prim
     }:
     mkDerivation {
       pname = "memory";
       version = "0.14.16";
       sha256 = "03rbszi5d4z9rlbfv8ydrl1xf84xsh8z57g07f7j9qccn9587c3v";
       libraryHaskellDepends = [
         base basement bytestring deepseq foundation ghc-prim
       ];
       testHaskellDepends = [ base basement bytestring foundation ];
       homepage = "https://github.com/vincenthz/hs-memory";
       description = "memory and related abstraction stuff";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "microstache" = callPackage
    ({ mkDerivation, aeson, base, bytestring, containers, deepseq
     , directory, filepath, hspec, parsec, text, transformers
     , unordered-containers, vector
     }:
     mkDerivation {
       pname = "microstache";
       version = "1.0.1.1";
       sha256 = "0851sqr1ppdj6m822635pa3j6qzdf25gyrhkjs25zdry6518bsax";
       revision = "2";
       editedCabalFile = "0rl6vgmjnf1a14kiynh4gnmy6n6kkik9hqj9k5vqw68h4f110i4b";
       libraryHaskellDepends = [
         aeson base bytestring containers deepseq directory filepath parsec
         text transformers unordered-containers vector
       ];
       testHaskellDepends = [
         aeson base bytestring containers hspec parsec text
       ];
       homepage = "https://github.com/phadej/microstache";
       description = "Mustache templates for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mime-types" = callPackage
    ({ mkDerivation, base, bytestring, containers, text }:
     mkDerivation {
       pname = "mime-types";
       version = "0.1.0.8";
       sha256 = "14ccl2842ya17zyj0bpc7vzklbyqvvydpbypn69h2fmhgji192x8";
       libraryHaskellDepends = [ base bytestring containers text ];
       homepage = "https://github.com/yesodweb/wai";
       description = "Basic mime-type handling types and functions";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mmorph" = callPackage
    ({ mkDerivation, base, mtl, transformers, transformers-compat }:
     mkDerivation {
       pname = "mmorph";
       version = "1.1.2";
       sha256 = "1gjz1ib968lqybma7my1n19qq6cdj6a7nskrlnwy4jy9jrwzs2n9";
       libraryHaskellDepends = [
         base mtl transformers transformers-compat
       ];
       description = "Monad morphisms";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mockery" = callPackage
    ({ mkDerivation, base, base-compat, bytestring, directory, filepath
     , hspec, logging-facade, temporary
     }:
     mkDerivation {
       pname = "mockery";
       version = "0.3.5";
       sha256 = "09ypgm3z69gq8mj6y66ss58kbjnk15r8frwcwbqcfbfksfnfv8dp";
       libraryHaskellDepends = [
         base base-compat bytestring directory filepath logging-facade
         temporary
       ];
       testHaskellDepends = [
         base base-compat bytestring directory filepath hspec logging-facade
         temporary
       ];
       description = "Support functions for automated testing";
       license = stdenv.lib.licenses.mit;
     }) {};
  "monad-control" = callPackage
    ({ mkDerivation, base, stm, transformers, transformers-base
     , transformers-compat
     }:
     mkDerivation {
       pname = "monad-control";
       version = "1.0.2.3";
       sha256 = "1c92833gr6cadidjdp8mlznkpp8lyxl0w3y7d19y8yi3klc3843c";
       libraryHaskellDepends = [
         base stm transformers transformers-base transformers-compat
       ];
       homepage = "https://github.com/basvandijk/monad-control";
       description = "Lift control operations, like exception catching, through monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-par" = callPackage
    ({ mkDerivation, abstract-deque, abstract-par, array, base
     , containers, deepseq, HUnit, monad-par-extras, mtl, mwc-random
     , parallel, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, test-framework-th, time
     }:
     mkDerivation {
       pname = "monad-par";
       version = "0.3.4.8";
       sha256 = "0ldrzqy24fsszvn2a2nr77m2ih7xm0h9bgkjyv1l274aj18xyk7q";
       libraryHaskellDepends = [
         abstract-deque abstract-par array base containers deepseq
         monad-par-extras mtl mwc-random parallel
       ];
       testHaskellDepends = [
         abstract-deque abstract-par array base containers deepseq HUnit
         monad-par-extras mtl mwc-random QuickCheck test-framework
         test-framework-hunit test-framework-quickcheck2 test-framework-th
         time
       ];
       homepage = "https://github.com/simonmar/monad-par";
       description = "A library for parallel programming based on a monad";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-par-extras" = callPackage
    ({ mkDerivation, abstract-par, base, cereal, deepseq, mtl, random
     , transformers
     }:
     mkDerivation {
       pname = "monad-par-extras";
       version = "0.3.3";
       sha256 = "0bl4bd6jzdc5zm20q1g67ppkfh6j6yn8fwj6msjayj621cck67p2";
       libraryHaskellDepends = [
         abstract-par base cereal deepseq mtl random transformers
       ];
       homepage = "https://github.com/simonmar/monad-par";
       description = "Combinators and extra features for Par monads";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "monad-peel" = callPackage
    ({ mkDerivation, base, extensible-exceptions, HUnit, test-framework
     , test-framework-hunit, transformers
     }:
     mkDerivation {
       pname = "monad-peel";
       version = "0.2.1.2";
       sha256 = "1x1kr5pk8ksw8xcm19c50jx8m0crf3m3qp73k31dnl9r1w4ykm9d";
       libraryHaskellDepends = [
         base extensible-exceptions transformers
       ];
       testHaskellDepends = [
         base extensible-exceptions HUnit test-framework
         test-framework-hunit transformers
       ];
       homepage = "http://andersk.mit.edu/haskell/monad-peel/";
       description = "Lift control operations like exception catching through monad transformers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "mono-traversable" = callPackage
    ({ mkDerivation, base, bytestring, containers, foldl, gauge
     , hashable, hspec, HUnit, mwc-random, QuickCheck, semigroups, split
     , text, transformers, unordered-containers, vector
     , vector-algorithms
     }:
     mkDerivation {
       pname = "mono-traversable";
       version = "1.0.9.0";
       sha256 = "0180ks0dyvpk1r20w5jw2w2n79mjnk69n9vhspaxzlyxqgim5psa";
       libraryHaskellDepends = [
         base bytestring containers hashable split text transformers
         unordered-containers vector vector-algorithms
       ];
       testHaskellDepends = [
         base bytestring containers foldl hspec HUnit QuickCheck semigroups
         text transformers unordered-containers vector
       ];
       benchmarkHaskellDepends = [ base gauge mwc-random vector ];
       homepage = "https://github.com/snoyberg/mono-traversable#readme";
       description = "Type classes for mapping, folding, and traversing monomorphic containers";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mtl" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "mtl";
       version = "2.2.2";
       sha256 = "1xmy5741h8cyy0d91ahvqdz2hykkk20l8br7lg1rccnkis5g80w8";
       libraryHaskellDepends = [ base transformers ];
       homepage = "http://github.com/haskell/mtl";
       description = "Monad classes, using functional dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "multimap" = callPackage
    ({ mkDerivation, base, containers }:
     mkDerivation {
       pname = "multimap";
       version = "1.2.1";
       sha256 = "0d3l5q4yvmywl6i9ip96zz0fvhjdh00mfbbniphbjxsi8wlwack3";
       libraryHaskellDepends = [ base containers ];
       homepage = "http://hub.darcs.net/scravy/multimap";
       description = "A multimap";
       license = stdenv.lib.licenses.mit;
     }) {};
  "mwc-random" = callPackage
    ({ mkDerivation, base, math-functions, primitive, time, vector }:
     mkDerivation {
       pname = "mwc-random";
       version = "0.13.6.0";
       sha256 = "05j7yh0hh9nxic3dijmzv44kc6gzclvamdph7sq7w19wq57k6pq6";
       libraryHaskellDepends = [
         base math-functions primitive time vector
       ];
       homepage = "https://github.com/bos/mwc-random";
       description = "Fast, high quality pseudo random number generation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "nanospec" = callPackage
    ({ mkDerivation, base, hspec, silently }:
     mkDerivation {
       pname = "nanospec";
       version = "0.2.2";
       sha256 = "1rcmhl9bhyfvanalnf1r86wkx6rq6wdvagnw1h011jcnnb1cq56g";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec silently ];
       homepage = "https://github.com/hspec/nanospec#readme";
       description = "A lightweight implementation of a subset of Hspec's API";
       license = stdenv.lib.licenses.mit;
     }) {};
  "nats" = callPackage
    ({ mkDerivation }:
     mkDerivation {
       pname = "nats";
       version = "1.1.2";
       sha256 = "1v40drmhixck3pz3mdfghamh73l4rp71mzcviipv1y8jhrfxilmr";
       revision = "1";
       editedCabalFile = "1jzyysf758lfindlclqpzqcd0lrgrdv0rnz2lg8g1rvv07x2n7zh";
       doHaddock = false;
       homepage = "http://github.com/ekmett/nats/";
       description = "Natural numbers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "natural-transformation" = callPackage
    ({ mkDerivation, base, containers, quickcheck-instances, tasty
     , tasty-quickcheck
     }:
     mkDerivation {
       pname = "natural-transformation";
       version = "0.4";
       sha256 = "1by8xwjc23l6pa9l4iv7zp82dykpll3vc3hgxk0pgva724n8xhma";
       revision = "6";
       editedCabalFile = "0qdjf1756gmq6vjd1p7i4b398s7j1gqfiaz3yf894h5p6x1ym0zl";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base containers quickcheck-instances tasty tasty-quickcheck
       ];
       homepage = "https://github.com/ku-fpg/natural-transformation";
       description = "A natural transformation package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network" = callPackage
    ({ mkDerivation, base, bytestring, doctest, hspec, HUnit, unix }:
     mkDerivation {
       pname = "network";
       version = "2.6.3.6";
       sha256 = "198mam7ahny48p9fajznbqq16a8ya2gw0xm3gnm1si1rmc4hdplv";
       libraryHaskellDepends = [ base bytestring unix ];
       testHaskellDepends = [ base bytestring doctest hspec HUnit ];
       doCheck = false;
       homepage = "https://github.com/haskell/network";
       description = "Low-level networking interface";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "network-uri" = callPackage
    ({ mkDerivation, base, deepseq, HUnit, parsec, test-framework
     , test-framework-hunit, test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "network-uri";
       version = "2.6.1.0";
       sha256 = "1w27zkvn39kjr9lmw9421y8w43h572ycsfafsb7kyvr3a4ihlgj2";
       revision = "1";
       editedCabalFile = "141nj7q0p9wkn5gr41ayc63cgaanr9m59yym47wpxqr3c334bk32";
       libraryHaskellDepends = [ base deepseq parsec ];
       testHaskellDepends = [
         base HUnit test-framework test-framework-hunit
         test-framework-quickcheck2
       ];
       homepage = "https://github.com/haskell/network-uri";
       description = "URI manipulation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "newtype" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "newtype";
       version = "0.2";
       sha256 = "0ng4i5r73256gzwl6bw57h0abqixj783c3ggph1hk2wsplx0655p";
       libraryHaskellDepends = [ base ];
       description = "A typeclass and set of functions for working with newtypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "numbers" = callPackage
    ({ mkDerivation, base, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "numbers";
       version = "3000.2.0.2";
       sha256 = "0xssrf7lbyplkgnbfw1jqkib3w9wgn1d6n85pk86nx63j05y9kph";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [
         base QuickCheck test-framework test-framework-quickcheck2
       ];
       homepage = "https://github.com/jwiegley/numbers#readme";
       description = "Various number types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "old-locale" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "old-locale";
       version = "1.0.0.7";
       sha256 = "0l3viphiszvz5wqzg7a45zp40grwlab941q5ay29iyw8p3v8pbyv";
       revision = "2";
       editedCabalFile = "04b9vn007hlvsrx4ksd3r8r3kbyaj2kvwxchdrmd4370qzi8p6gs";
       libraryHaskellDepends = [ base ];
       description = "locale library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "old-time" = callPackage
    ({ mkDerivation, base, old-locale }:
     mkDerivation {
       pname = "old-time";
       version = "1.1.0.3";
       sha256 = "1h9b26s3kfh2k0ih4383w90ibji6n0iwamxp6rfp2lbq1y5ibjqw";
       revision = "2";
       editedCabalFile = "1j6ln1dkvhdvnwl33bp0xf9lhc4sybqk0aw42p8cq81xwwzbn7y9";
       libraryHaskellDepends = [ base old-locale ];
       description = "Time library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "optparse-applicative" = callPackage
    ({ mkDerivation, ansi-wl-pprint, base, bytestring, process
     , QuickCheck, transformers, transformers-compat
     }:
     mkDerivation {
       pname = "optparse-applicative";
       version = "0.14.2.0";
       sha256 = "0c3z1mvynlyv1garjbdmdd3npm40dabgm75js4r07cf766c1wd71";
       libraryHaskellDepends = [
         ansi-wl-pprint base process transformers transformers-compat
       ];
       testHaskellDepends = [ base bytestring QuickCheck ];
       homepage = "https://github.com/pcapriotti/optparse-applicative";
       description = "Utilities and combinators for parsing command line options";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "parallel" = callPackage
    ({ mkDerivation, array, base, containers, deepseq, ghc-prim }:
     mkDerivation {
       pname = "parallel";
       version = "3.2.2.0";
       sha256 = "1xkfi96w6yfpppd0nw1rnszdxmvifwzm699ilv6332ra3akm610p";
       libraryHaskellDepends = [ array base containers deepseq ghc-prim ];
       description = "Parallel programming library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "parsec" = callPackage
    ({ mkDerivation, base, bytestring, mtl, text }:
     mkDerivation {
       pname = "parsec";
       version = "3.1.13.0";
       sha256 = "1wc09pyn70p8z6llink10c8pqbh6ikyk554911yfwxv1g91swqbq";
       revision = "1";
       editedCabalFile = "1dpr1wfpykkl6kayp4wnyn0n1zv7pvqksax2i54dhdgjijj8qynd";
       libraryHaskellDepends = [ base bytestring mtl text ];
       doCheck = false;
       homepage = "https://github.com/hvr/parsec";
       description = "Monadic parser combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "parser-combinators" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "parser-combinators";
       version = "0.4.0";
       sha256 = "1azkz0a6ikym02s8wydjcklp7rz8k512bs4s9lp9g1g03m0yj95i";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/mrkkrp/parser-combinators";
       description = "Lightweight package providing commonly useful parser combinators";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "path" = callPackage
    ({ mkDerivation, aeson, base, deepseq, exceptions, filepath
     , hashable, template-haskell
     }:
     mkDerivation {
       pname = "path";
       version = "0.6.1";
       sha256 = "0nayla4k1gb821k8y5b9miflv1bi8f0czf9rqr044nrr2dddi2sb";
       revision = "1";
       editedCabalFile = "05b1zwx2a893h4h5wvgpc5g5pyx71hfmx409rqisd8s1bq1hn463";
       libraryHaskellDepends = [
         aeson base deepseq exceptions filepath hashable template-haskell
       ];
       doCheck = false;
       description = "Support for well-typed paths";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "pcre-light" = callPackage
    ({ mkDerivation, base, bytestring, pcre }:
     mkDerivation {
       pname = "pcre-light";
       version = "0.4.0.4";
       sha256 = "0xcyi1fivwg7a92mch5bcqzmrfxzqj42rmb3m8kgs61x4qwpxj82";
       libraryHaskellDepends = [ base bytestring ];
       libraryPkgconfigDepends = [ pcre ];
       homepage = "https://github.com/Daniel-Diaz/pcre-light";
       description = "Portable regex library for Perl 5 compatible regular expressions";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) pcre;};
  "polyparse" = callPackage
    ({ mkDerivation, base, bytestring, text }:
     mkDerivation {
       pname = "polyparse";
       version = "1.12";
       sha256 = "05dya1vdvq29hkhkdlsglzhw7bdn51rvs1javs0q75nf99c66k7m";
       libraryHaskellDepends = [ base bytestring text ];
       homepage = "http://code.haskell.org/~malcolm/polyparse/";
       description = "A variety of alternative parser combinator libraries";
       license = "LGPL";
     }) {};
  "pretty-show" = callPackage
    ({ mkDerivation, array, base, filepath, ghc-prim, happy
     , haskell-lexer, pretty
     }:
     mkDerivation {
       pname = "pretty-show";
       version = "1.6.16";
       sha256 = "0l03mhbdnf0sj6kw2s3cf2xhfbl0809jr9fhj7cmpkhjpxv89vnv";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         array base filepath ghc-prim haskell-lexer pretty
       ];
       libraryToolDepends = [ happy ];
       executableHaskellDepends = [ base ];
       homepage = "http://wiki.github.com/yav/pretty-show";
       description = "Tools for working with derived `Show` instances and generic inspection of values";
       license = stdenv.lib.licenses.mit;
     }) {};
  "primitive" = callPackage
    ({ mkDerivation, base, ghc-prim, transformers }:
     mkDerivation {
       pname = "primitive";
       version = "0.6.4.0";
       sha256 = "0r0cda7acvplgwaxy69kviv4jp7kkfi038by68gj4yfx4iwszgjc";
       revision = "1";
       editedCabalFile = "18a14k1yiam1m4l29rin9a0y53yp3nxvkz358nysld8aqwy2qsjv";
       libraryHaskellDepends = [ base ghc-prim transformers ];
       homepage = "https://github.com/haskell/primitive";
       description = "Primitive memory-related operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "profunctors" = callPackage
    ({ mkDerivation, base, base-orphans, bifunctors, comonad
     , contravariant, distributive, semigroups, tagged, transformers
     }:
     mkDerivation {
       pname = "profunctors";
       version = "5.2.2";
       sha256 = "0s1pwjidbn761xk43pmzyvn99hm3psdifjd78ylki7f97aiyd0g9";
       revision = "2";
       editedCabalFile = "1ywlg9z8nlhd2avgb8c6gbkv8zyk7hvc25926bafyg0m0k8y1amq";
       libraryHaskellDepends = [
         base base-orphans bifunctors comonad contravariant distributive
         semigroups tagged transformers
       ];
       homepage = "http://github.com/ekmett/profunctors/";
       description = "Profunctors";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "psqueues" = callPackage
    ({ mkDerivation, array, base, containers, criterion, deepseq
     , fingertree-psqueue, ghc-prim, hashable, HUnit, mtl, PSQueue
     , QuickCheck, random, tagged, test-framework, test-framework-hunit
     , test-framework-quickcheck2, unordered-containers
     }:
     mkDerivation {
       pname = "psqueues";
       version = "0.2.7.0";
       sha256 = "1sjgc9bxh63kkdp59nbirx3xazr02ia5yhp4f4a0jnq1hj465wsc";
       libraryHaskellDepends = [ base deepseq ghc-prim hashable ];
       testHaskellDepends = [
         array base deepseq ghc-prim hashable HUnit QuickCheck tagged
         test-framework test-framework-hunit test-framework-quickcheck2
       ];
       benchmarkHaskellDepends = [
         base containers criterion deepseq fingertree-psqueue ghc-prim
         hashable mtl PSQueue random unordered-containers
       ];
       description = "Pure priority search queues";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "quickcheck-instances" = callPackage
    ({ mkDerivation, array, base, base-compat, bytestring
     , case-insensitive, containers, hashable, old-time, QuickCheck
     , scientific, tagged, text, time, transformers, transformers-compat
     , unordered-containers, uuid-types, vector
     }:
     mkDerivation {
       pname = "quickcheck-instances";
       version = "0.3.18";
       sha256 = "1bh1pzz5fdcqvzdcirqxna6fnjms02min5md716299g5niz46w55";
       revision = "1";
       editedCabalFile = "1sngfq3v71bvgjsl8cj5kh65m3fziwy8dkvwjzs0kxfrzr87faly";
       libraryHaskellDepends = [
         array base base-compat bytestring case-insensitive containers
         hashable old-time QuickCheck scientific tagged text time
         transformers transformers-compat unordered-containers uuid-types
         vector
       ];
       testHaskellDepends = [
         base containers QuickCheck tagged uuid-types
       ];
       homepage = "https://github.com/phadej/qc-instances";
       description = "Common quickcheck instances";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "quickcheck-io" = callPackage
    ({ mkDerivation, base, HUnit, QuickCheck }:
     mkDerivation {
       pname = "quickcheck-io";
       version = "0.2.0";
       sha256 = "08k4v7pkgjf30pv5j2dfv1gqv6hclxlniyq2sps8zq4zswcr2xzv";
       libraryHaskellDepends = [ base HUnit QuickCheck ];
       homepage = "https://github.com/hspec/quickcheck-io#readme";
       description = "Use HUnit assertions as QuickCheck properties";
       license = stdenv.lib.licenses.mit;
     }) {};
  "random" = callPackage
    ({ mkDerivation, base, time }:
     mkDerivation {
       pname = "random";
       version = "1.1";
       sha256 = "0nis3lbkp8vfx8pkr6v7b7kr5m334bzb0fk9vxqklnp2aw8a865p";
       revision = "1";
       editedCabalFile = "1pv5d7bm2rgap7llp5vjsplrg048gvf0226y0v19gpvdsx7n4rvv";
       libraryHaskellDepends = [ base time ];
       testHaskellDepends = [ base ];
       description = "random number library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "raw-strings-qq" = callPackage
    ({ mkDerivation, base, HUnit, template-haskell }:
     mkDerivation {
       pname = "raw-strings-qq";
       version = "1.1";
       sha256 = "1lxy1wy3awf52968iy5y9r5z4qgnn2sxkdrh7js3m9gadb11w09f";
       libraryHaskellDepends = [ base template-haskell ];
       testHaskellDepends = [ base HUnit ];
       homepage = "https://github.com/23Skidoo/raw-strings-qq";
       description = "Raw string literals for Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "refact" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "refact";
       version = "0.3.0.2";
       sha256 = "0v0zxcx29b8jxs2kgy9csykqcp8kzhdvyylw2xfwmj4pfxr2kl0a";
       libraryHaskellDepends = [ base ];
       description = "Specify refactorings to perform with apply-refact";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "reflection" = callPackage
    ({ mkDerivation, base, template-haskell }:
     mkDerivation {
       pname = "reflection";
       version = "2.1.4";
       sha256 = "0kf4a5ijw6jfnfibjcrpdy9vzh1n6v2pxia8dhyyqdissiwc8bzj";
       libraryHaskellDepends = [ base template-haskell ];
       homepage = "http://github.com/ekmett/reflection";
       description = "Reifies arbitrary terms into types that can be reflected back into terms";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-base" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, mtl }:
     mkDerivation {
       pname = "regex-base";
       version = "0.93.2";
       sha256 = "0y1j4h2pg12c853nzmczs263di7xkkmlnsq5dlp5wgbgl49mgp10";
       libraryHaskellDepends = [ array base bytestring containers mtl ];
       homepage = "http://sourceforge.net/projects/lazy-regex";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "regex-posix" = callPackage
    ({ mkDerivation, array, base, bytestring, containers, regex-base }:
     mkDerivation {
       pname = "regex-posix";
       version = "0.95.2";
       sha256 = "0gkhzhj8nvfn1ija31c7xnl6p0gadwii9ihyp219ck2arlhrj0an";
       libraryHaskellDepends = [
         array base bytestring containers regex-base
       ];
       homepage = "http://sourceforge.net/projects/lazy-regex";
       description = "Replaces/Enhances Text.Regex";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "resourcet" = callPackage
    ({ mkDerivation, base, containers, exceptions, hspec, mtl
     , primitive, transformers, unliftio-core
     }:
     mkDerivation {
       pname = "resourcet";
       version = "1.2.1";
       sha256 = "0rzjzh34s36ssign7akqjnwnjxf11c3511wk7ky0xxy0dqmc2rg7";
       libraryHaskellDepends = [
         base containers exceptions mtl primitive transformers unliftio-core
       ];
       testHaskellDepends = [ base exceptions hspec transformers ];
       homepage = "http://github.com/snoyberg/conduit";
       description = "Deterministic allocation and freeing of scarce resources";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "safe" = callPackage
    ({ mkDerivation, base, deepseq, QuickCheck }:
     mkDerivation {
       pname = "safe";
       version = "0.3.17";
       sha256 = "0p3yaf5slvyz1cyy51jq64c5rlp8yzwim8iy2dlnk42if4gc9ibr";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base deepseq QuickCheck ];
       homepage = "https://github.com/ndmitchell/safe#readme";
       description = "Library of safe (exception free) functions";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "scientific" = callPackage
    ({ mkDerivation, base, binary, bytestring, containers, criterion
     , deepseq, hashable, integer-gmp, integer-logarithms, primitive
     , text
     }:
     mkDerivation {
       pname = "scientific";
       version = "0.3.6.2";
       sha256 = "03ql2f0ac8bsl524idy9xxa3kxisb2sj3avflzw580j5hzy0m397";
       libraryHaskellDepends = [
         base binary bytestring containers deepseq hashable integer-gmp
         integer-logarithms primitive text
       ];
       benchmarkHaskellDepends = [ base criterion ];
       doCheck = false;
       homepage = "https://github.com/basvandijk/scientific";
       description = "Numbers represented using scientific notation";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "semigroupoids" = callPackage
    ({ mkDerivation, base, base-orphans, bifunctors, Cabal
     , cabal-doctest, comonad, containers, contravariant, distributive
     , doctest, hashable, semigroups, tagged, template-haskell
     , transformers, transformers-compat, unordered-containers
     }:
     mkDerivation {
       pname = "semigroupoids";
       version = "5.2.2";
       sha256 = "17i96y4iqj8clcs090lf6k0ij3j16nj14vsfwz0mm9nd6i4gbpp4";
       revision = "4";
       editedCabalFile = "0pqfrxzypjq6z8lgdkzq4vhcyqkpk5326hny0r6snpc3gm78r4ij";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         base base-orphans bifunctors comonad containers contravariant
         distributive hashable semigroups tagged template-haskell
         transformers transformers-compat unordered-containers
       ];
       testHaskellDepends = [ base doctest ];
       homepage = "http://github.com/ekmett/semigroupoids";
       description = "Semigroupoids: Category sans id";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "semigroups" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "semigroups";
       version = "0.18.5";
       sha256 = "17g29h62g1k51ghhvzkw72zksjgi6vs6bfipkj81pqw1dsprcamb";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/ekmett/semigroups/";
       description = "Anything that associates";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant" = callPackage
    ({ mkDerivation, aeson, aeson-compat, attoparsec, base, base-compat
     , bytestring, Cabal, cabal-doctest, case-insensitive, doctest
     , hspec, hspec-discover, http-api-data, http-media, http-types
     , mmorph, mtl, natural-transformation, network-uri, QuickCheck
     , quickcheck-instances, singleton-bool, string-conversions, tagged
     , text, vault
     }:
     mkDerivation {
       pname = "servant";
       version = "0.13.0.1";
       sha256 = "0vfypxdhz1yqkj6ini41ylas91jklvn05rrnarp4d57rli498jx7";
       revision = "1";
       editedCabalFile = "0c5j8y6x9andar2zlqr2z4b8j1m3ss5qd4shias4z86mssmfgxp6";
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         aeson attoparsec base base-compat bytestring case-insensitive
         http-api-data http-media http-types mmorph mtl
         natural-transformation network-uri singleton-bool
         string-conversions tagged text vault
       ];
       testHaskellDepends = [
         aeson aeson-compat attoparsec base base-compat bytestring doctest
         hspec QuickCheck quickcheck-instances string-conversions text
       ];
       testToolDepends = [ hspec-discover ];
       homepage = "http://haskell-servant.readthedocs.org/";
       description = "A family of combinators for defining webservices APIs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "servant-server" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base-compat
     , base64-bytestring, bytestring, Cabal, cabal-doctest, containers
     , exceptions, filepath, http-api-data, http-media, http-types
     , monad-control, mtl, network, network-uri, resourcet, safe
     , servant, split, string-conversions, system-filepath, tagged, text
     , transformers, transformers-base, transformers-compat, wai
     , wai-app-static, warp, word8
     }:
     mkDerivation {
       pname = "servant-server";
       version = "0.13.0.1";
       sha256 = "0fggdqz2d6q96x8vnm64yvarg4fgxqh0jd3vis6yxpybfi174arm";
       revision = "2";
       editedCabalFile = "16bllcaqpcj6i53vl1sas1f6m85i6ah7qcn5mh8x515qmfzngisp";
       isLibrary = true;
       isExecutable = true;
       setupHaskellDepends = [ base Cabal cabal-doctest ];
       libraryHaskellDepends = [
         aeson attoparsec base base-compat base64-bytestring bytestring
         containers exceptions filepath http-api-data http-media http-types
         monad-control mtl network network-uri resourcet safe servant split
         string-conversions system-filepath tagged text transformers
         transformers-base transformers-compat wai wai-app-static warp word8
       ];
       executableHaskellDepends = [ aeson base servant text wai warp ];
       doCheck = false;
       homepage = "http://haskell-servant.readthedocs.org/";
       description = "A family of combinators for defining webservices APIs and serving them";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "setenv" = callPackage
    ({ mkDerivation, base, unix }:
     mkDerivation {
       pname = "setenv";
       version = "0.1.1.3";
       sha256 = "0cnbgrvb9byyahb37zlqrj05rj25v190crgcw8wmlgf0mwwxyn73";
       revision = "1";
       editedCabalFile = "0ny4g3kjys0hqg41mnwrsymy1bwhl8l169kis4y4fa58sb06m4f5";
       libraryHaskellDepends = [ base unix ];
       description = "A cross-platform library for setting environment variables";
       license = stdenv.lib.licenses.mit;
     }) {};
  "shake" = callPackage
    ({ mkDerivation, base, binary, bytestring, deepseq, directory
     , extra, filepath, hashable, js-flot, js-jquery, primitive, process
     , QuickCheck, random, time, transformers, unix
     , unordered-containers, utf8-string
     }:
     mkDerivation {
       pname = "shake";
       version = "0.16.4";
       sha256 = "0dhlkcn1zsg1w97vzs1yrpkn6iwhlzh36dwclx2lafzbdjja6cmp";
       isLibrary = true;
       isExecutable = true;
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         base binary bytestring deepseq directory extra filepath hashable
         js-flot js-jquery primitive process random time transformers unix
         unordered-containers utf8-string
       ];
       executableHaskellDepends = [
         base binary bytestring deepseq directory extra filepath hashable
         js-flot js-jquery primitive process random time transformers unix
         unordered-containers utf8-string
       ];
       testHaskellDepends = [
         base binary bytestring deepseq directory extra filepath hashable
         js-flot js-jquery primitive process QuickCheck random time
         transformers unix unordered-containers utf8-string
       ];
       doCheck = false;
       homepage = "https://shakebuild.com";
       description = "Build system library, like Make, but more accurate dependencies";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "silently" = callPackage
    ({ mkDerivation, base, deepseq, directory, nanospec, temporary }:
     mkDerivation {
       pname = "silently";
       version = "1.2.5";
       sha256 = "0f9qm3f7y0hpxn6mddhhg51mm1r134qkvd2kr8r6192ka1ijbxnf";
       libraryHaskellDepends = [ base deepseq directory ];
       testHaskellDepends = [ base deepseq directory nanospec temporary ];
       homepage = "https://github.com/hspec/silently";
       description = "Prevent or capture writing to stdout and other handles";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "simple-reflect" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "simple-reflect";
       version = "0.3.3";
       sha256 = "0ayvrx5cm8n6db21jiyjmk5h93pw7cz1707hih09hlhk9jh5x0h7";
       libraryHaskellDepends = [ base ];
       homepage = "http://twanvl.nl/blog/haskell/simple-reflection-of-expressions";
       description = "Simple reflection of expressions containing variables";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "simple-sendfile" = callPackage
    ({ mkDerivation, base, bytestring, conduit, conduit-extra
     , directory, hspec, HUnit, network, process, resourcet, unix
     }:
     mkDerivation {
       pname = "simple-sendfile";
       version = "0.2.27";
       sha256 = "1bwwqzcm56m2w4ymsa054sxmpbj76h9pvb0jf8zxp8lr41cp51gn";
       libraryHaskellDepends = [ base bytestring network unix ];
       testHaskellDepends = [
         base bytestring conduit conduit-extra directory hspec HUnit network
         process resourcet unix
       ];
       description = "Cross platform library for the sendfile system call";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "singleton-bool" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "singleton-bool";
       version = "0.1.4";
       sha256 = "0apvzb6ym0fnm4rx7paz6ivv72ahzn2bxhvyd1drw50ypvicd581";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/phadej/singleton-bool#readme";
       description = "Type level booleans";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "siphash" = callPackage
    ({ mkDerivation, base, bytestring, cpu, QuickCheck, test-framework
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "siphash";
       version = "1.0.3";
       sha256 = "1wq5dan30ggjgmravy92ylqjvjv1q7mxrmddr7zc8h6aqr0wx0fg";
       revision = "1";
       editedCabalFile = "1q2dy0ywngm9iv7k6d9gnf860m9hpf62q5qvdzmxw5s629gk4afn";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [ base bytestring cpu ];
       testHaskellDepends = [
         base bytestring QuickCheck test-framework
         test-framework-quickcheck2
       ];
       homepage = "http://github.com/vincenthz/hs-siphash";
       description = "siphash: a fast short input PRF";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "smallcheck" = callPackage
    ({ mkDerivation, base, ghc-prim, logict, mtl, pretty }:
     mkDerivation {
       pname = "smallcheck";
       version = "1.1.5";
       sha256 = "195fj7w3v03d1y1nm2ylavzrwxjcdbq0lb6zsw1dwyx5jmwfc84h";
       libraryHaskellDepends = [ base ghc-prim logict mtl pretty ];
       homepage = "https://github.com/feuerbach/smallcheck";
       description = "A property-based testing library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "split" = callPackage
    ({ mkDerivation, base, QuickCheck }:
     mkDerivation {
       pname = "split";
       version = "0.2.3.3";
       sha256 = "04qlmkcyklznl03gsjg95b4nzb6i96gdapqg60rny9szgi7ngk8x";
       revision = "1";
       editedCabalFile = "0vz2ylx81nfq2981msig080j7n41xf2lrxzf3hj1x3g3cllb3izi";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base QuickCheck ];
       description = "Combinator library for splitting lists";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "statistics" = callPackage
    ({ mkDerivation, aeson, base, base-orphans, binary, deepseq, erf
     , HUnit, ieee754, math-functions, monad-par, mwc-random, primitive
     , QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2, vector, vector-algorithms
     , vector-binary-instances, vector-th-unbox
     }:
     mkDerivation {
       pname = "statistics";
       version = "0.14.0.2";
       sha256 = "0y27gafkib0x0fn39qfn2rkgsfrm09ng35sbb5dwr7rclhnxz59l";
       revision = "2";
       editedCabalFile = "1bx70yqkn62ii17fjv3pig4hklrzkqd09zj67zzjiyjzmn04fir3";
       libraryHaskellDepends = [
         aeson base base-orphans binary deepseq erf math-functions monad-par
         mwc-random primitive vector vector-algorithms
         vector-binary-instances vector-th-unbox
       ];
       testHaskellDepends = [
         aeson base binary erf HUnit ieee754 math-functions mwc-random
         primitive QuickCheck test-framework test-framework-hunit
         test-framework-quickcheck2 vector vector-algorithms
       ];
       doCheck = false;
       homepage = "https://github.com/bos/statistics";
       description = "A library of statistical types, data, and functions";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "stm" = callPackage
    ({ mkDerivation, array, base }:
     mkDerivation {
       pname = "stm";
       version = "2.4.5.0";
       sha256 = "19sr11a0hqikhvf561b38phz6k3zg9s157a0f5ffvghk7wcdpmri";
       libraryHaskellDepends = [ array base ];
       homepage = "https://wiki.haskell.org/Software_transactional_memory";
       description = "Software Transactional Memory";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "streaming-commons" = callPackage
    ({ mkDerivation, array, async, base, blaze-builder, bytestring
     , deepseq, directory, gauge, hspec, network, process, QuickCheck
     , random, stm, text, transformers, unix, zlib
     }:
     mkDerivation {
       pname = "streaming-commons";
       version = "0.1.19";
       sha256 = "19qp8bnnfs31jk08991lmj3dywbjxh9iydriifbdjj2mvy8axz23";
       libraryHaskellDepends = [
         array async base blaze-builder bytestring directory network process
         random stm text transformers unix zlib
       ];
       testHaskellDepends = [
         array async base blaze-builder bytestring deepseq hspec network
         QuickCheck text unix zlib
       ];
       benchmarkHaskellDepends = [
         base blaze-builder bytestring deepseq gauge text
       ];
       homepage = "https://github.com/fpco/streaming-commons";
       description = "Common lower-level functions needed by various streaming data libraries";
       license = stdenv.lib.licenses.mit;
     }) {};
  "string-conversions" = callPackage
    ({ mkDerivation, base, bytestring, deepseq, hspec, QuickCheck
     , quickcheck-instances, text, utf8-string
     }:
     mkDerivation {
       pname = "string-conversions";
       version = "0.4.0.1";
       sha256 = "150rdank90h7v08x0wq4dffjbxv2daf5v9sqfs5mab76kinwxg26";
       libraryHaskellDepends = [ base bytestring text utf8-string ];
       testHaskellDepends = [
         base bytestring deepseq hspec QuickCheck quickcheck-instances text
         utf8-string
       ];
       homepage = "https://github.com/soenkehahn/string-conversions#readme";
       description = "Simplifies dealing with different types for strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "stringbuilder" = callPackage
    ({ mkDerivation, base, hspec, QuickCheck }:
     mkDerivation {
       pname = "stringbuilder";
       version = "0.5.1";
       sha256 = "1fh3csx1wcssn8xyvl4ip4aprh9l4qyz2kk8mgjvqvc0vb2bsy6q";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec QuickCheck ];
       description = "A writer monad for multi-line string literals";
       license = stdenv.lib.licenses.mit;
     }) {};
  "stringsearch" = callPackage
    ({ mkDerivation, array, base, bytestring, containers }:
     mkDerivation {
       pname = "stringsearch";
       version = "0.3.6.6";
       sha256 = "0jpy9xjcjdbpi3wk6mg7xwd7wfi2mma70p97v1ij5i8bj9qijpr9";
       libraryHaskellDepends = [ array base bytestring containers ];
       homepage = "https://bitbucket.org/dafis/stringsearch";
       description = "Fast searching, splitting and replacing of ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "syb" = callPackage
    ({ mkDerivation, base, containers, HUnit, mtl }:
     mkDerivation {
       pname = "syb";
       version = "0.7";
       sha256 = "1da2zz7gqm4xbkx5vpd74dayx1svaxyl145fl14mq15lbb77sxdq";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base containers HUnit mtl ];
       homepage = "http://www.cs.uu.nl/wiki/GenericProgramming/SYB";
       description = "Scrap Your Boilerplate";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "system-filepath" = callPackage
    ({ mkDerivation, base, bytestring, Cabal, deepseq, text }:
     mkDerivation {
       pname = "system-filepath";
       version = "0.4.14";
       sha256 = "14yras4pz2dh55xpwmazcgxijvi8913pjgzb9iw50mjq1lycwmhn";
       revision = "1";
       editedCabalFile = "18llfvisghrn9w9yfgacqn51gs50a0lngah3bmg852h0swj7vkp8";
       setupHaskellDepends = [ base Cabal ];
       libraryHaskellDepends = [ base bytestring deepseq text ];
       doCheck = false;
       homepage = "https://github.com/fpco/haskell-filesystem";
       description = "High-level, byte-based file and directory path manipulations (deprecated)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tagged" = callPackage
    ({ mkDerivation, base, deepseq, template-haskell, transformers }:
     mkDerivation {
       pname = "tagged";
       version = "0.8.6";
       sha256 = "1pciqzxf9ncv954v4r527xkxkn7r5hcr13mfw5dg1xjci3qdw5md";
       libraryHaskellDepends = [
         base deepseq template-haskell transformers
       ];
       homepage = "http://github.com/ekmett/tagged";
       description = "Haskell 98 phantom types to avoid unsafely passing dummy arguments";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tasty" = callPackage
    ({ mkDerivation, ansi-terminal, async, base, clock, containers, mtl
     , optparse-applicative, stm, tagged, unbounded-delays, unix
     }:
     mkDerivation {
       pname = "tasty";
       version = "1.0.1.1";
       sha256 = "1czfvgm3wb9dlxccr7h49929m6rag7rc6q5hlj9yw0l4lm0hv4hs";
       libraryHaskellDepends = [
         ansi-terminal async base clock containers mtl optparse-applicative
         stm tagged unbounded-delays unix
       ];
       homepage = "https://github.com/feuerbach/tasty";
       description = "Modern and extensible testing framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-discover" = callPackage
    ({ mkDerivation, base, containers, directory, filepath, Glob
     , hedgehog, tasty, tasty-hedgehog, tasty-hspec, tasty-hunit
     , tasty-quickcheck, tasty-smallcheck
     }:
     mkDerivation {
       pname = "tasty-discover";
       version = "4.2.1";
       sha256 = "0ghxrjkqp4w6i47pvdsd25zs6sj10rw4ybkf0pxr598l8qw5nv5y";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base containers directory filepath Glob
       ];
       executableHaskellDepends = [
         base containers directory filepath Glob
       ];
       testHaskellDepends = [
         base containers directory filepath Glob hedgehog tasty
         tasty-hedgehog tasty-hspec tasty-hunit tasty-quickcheck
         tasty-smallcheck
       ];
       homepage = "http://git.coop/lwm/tasty-discover";
       description = "Test discovery for the tasty framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-expected-failure" = callPackage
    ({ mkDerivation, base, tagged, tasty }:
     mkDerivation {
       pname = "tasty-expected-failure";
       version = "0.11.1.1";
       sha256 = "1i2s809m644b7hgiblqay9j364r3fjj1rwbrahsn1pgr5q6mr6ji";
       libraryHaskellDepends = [ base tagged tasty ];
       homepage = "http://github.com/nomeata/tasty-expected-failure";
       description = "Mark tasty tests as failure expected";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-golden" = callPackage
    ({ mkDerivation, async, base, bytestring, containers, deepseq
     , directory, filepath, mtl, optparse-applicative, process, tagged
     , tasty, tasty-hunit, temporary, temporary-rc
     }:
     mkDerivation {
       pname = "tasty-golden";
       version = "2.3.2";
       sha256 = "0k3ibjhjc9vcwzrjnl4rnwvfm8l81q347nb7dgvcib6n5wm3s404";
       libraryHaskellDepends = [
         async base bytestring containers deepseq directory filepath mtl
         optparse-applicative process tagged tasty temporary
       ];
       testHaskellDepends = [
         base directory filepath process tasty tasty-hunit temporary-rc
       ];
       homepage = "https://github.com/feuerbach/tasty-golden";
       description = "Golden tests support for tasty";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-hedgehog" = callPackage
    ({ mkDerivation, base, hedgehog, tagged, tasty
     , tasty-expected-failure
     }:
     mkDerivation {
       pname = "tasty-hedgehog";
       version = "0.1.0.2";
       sha256 = "0cjdi0kpwpb4m5ad1y47x52336xfza4m82h5zg76r75f7fvzzh8x";
       revision = "2";
       editedCabalFile = "0kcsky6xnqpg2hpvpw50sdmjg50z1s57wbvxqmcjrd7wx8hpapdq";
       libraryHaskellDepends = [ base hedgehog tagged tasty ];
       testHaskellDepends = [
         base hedgehog tasty tasty-expected-failure
       ];
       homepage = "https://github.com/qfpl/tasty-hedgehog";
       description = "Integrates the hedgehog testing library with the tasty testing framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tasty-hspec" = callPackage
    ({ mkDerivation, base, hspec, hspec-core, QuickCheck, tasty
     , tasty-quickcheck, tasty-smallcheck
     }:
     mkDerivation {
       pname = "tasty-hspec";
       version = "1.1.5";
       sha256 = "0m0ip2l4rg4pnrvk3mjxkbq2l683psv1x3v9l4rglk2k3pvxq36v";
       revision = "1";
       editedCabalFile = "0zgbcrahzfg37bnni6fj0qb0fpbk5rdha589mh960d5sbq58pljf";
       libraryHaskellDepends = [
         base hspec hspec-core QuickCheck tasty tasty-quickcheck
         tasty-smallcheck
       ];
       homepage = "https://github.com/mitchellwrosen/tasty-hspec";
       description = "Hspec support for the Tasty test framework";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tasty-hunit" = callPackage
    ({ mkDerivation, base, call-stack, tasty }:
     mkDerivation {
       pname = "tasty-hunit";
       version = "0.10.0.1";
       sha256 = "0j3hgga6c3s8h5snzivb8a75h96207ia2rlbxzj07xbf4zpkp44g";
       libraryHaskellDepends = [ base call-stack tasty ];
       homepage = "https://github.com/feuerbach/tasty";
       description = "HUnit support for the Tasty test framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-kat" = callPackage
    ({ mkDerivation, base, bytestring, mtl, tasty, tasty-hunit
     , tasty-quickcheck
     }:
     mkDerivation {
       pname = "tasty-kat";
       version = "0.0.3";
       sha256 = "14yvlpli6cv6bn3kh8mlfp4x1l6ns4fvmfv6hmj75cvxyzq029d7";
       libraryHaskellDepends = [ base bytestring tasty ];
       testHaskellDepends = [
         base bytestring mtl tasty tasty-hunit tasty-quickcheck
       ];
       homepage = "https://github.com/vincenthz/tasty-kat";
       description = "Known Answer Tests (KAT) framework for tasty";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-quickcheck" = callPackage
    ({ mkDerivation, base, pcre-light, QuickCheck, random, tagged
     , tasty, tasty-hunit
     }:
     mkDerivation {
       pname = "tasty-quickcheck";
       version = "0.9.2";
       sha256 = "0wsqm4fjxnh64sjlccjapvgvw4dhl603qpxl79g3sa3fmgg0m4n5";
       libraryHaskellDepends = [ base QuickCheck random tagged tasty ];
       testHaskellDepends = [ base pcre-light tasty tasty-hunit ];
       homepage = "https://github.com/feuerbach/tasty";
       description = "QuickCheck support for the Tasty test framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-smallcheck" = callPackage
    ({ mkDerivation, async, base, smallcheck, tagged, tasty }:
     mkDerivation {
       pname = "tasty-smallcheck";
       version = "0.8.1";
       sha256 = "1n66ngzllf3xrlqykwszlkwsi96n5nkm7xbpfq7774vpvfnafjri";
       libraryHaskellDepends = [ async base smallcheck tagged tasty ];
       homepage = "http://documentup.com/feuerbach/tasty";
       description = "SmallCheck support for the Tasty test framework";
       license = stdenv.lib.licenses.mit;
     }) {};
  "tasty-th" = callPackage
    ({ mkDerivation, base, haskell-src-exts, tasty, tasty-hunit
     , template-haskell
     }:
     mkDerivation {
       pname = "tasty-th";
       version = "0.1.7";
       sha256 = "0b2ivrw2257m4cy4rjnkwqlarh83j1y3zywnmaqqqbvy667sqnj3";
       libraryHaskellDepends = [
         base haskell-src-exts tasty template-haskell
       ];
       testHaskellDepends = [ base tasty-hunit ];
       homepage = "http://github.com/bennofs/tasty-th";
       description = "Automatic tasty test case discovery using TH";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "temporary" = callPackage
    ({ mkDerivation, base, base-compat, directory, exceptions, filepath
     , tasty, tasty-hunit, transformers, unix
     }:
     mkDerivation {
       pname = "temporary";
       version = "1.2.1.1";
       sha256 = "1wq0rc71mp0lw7pkpcbhglf636ni46xnlpsmx6yz8acmwmqj8xsm";
       libraryHaskellDepends = [
         base directory exceptions filepath transformers unix
       ];
       testHaskellDepends = [
         base base-compat directory filepath tasty tasty-hunit unix
       ];
       homepage = "https://github.com/feuerbach/temporary";
       description = "Portable temporary file and directory support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "temporary-rc" = callPackage
    ({ mkDerivation, base, directory, exceptions, filepath
     , transformers, unix
     }:
     mkDerivation {
       pname = "temporary-rc";
       version = "1.2.0.3";
       sha256 = "1nqih0qks439k3pr5kmbbc8rjdw730slrxlflqb27fbxbzb8skqs";
       libraryHaskellDepends = [
         base directory exceptions filepath transformers unix
       ];
       homepage = "http://www.github.com/feuerbach/temporary";
       description = "Portable temporary file and directory support for Windows and Unix, based on code from Cabal";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "terminal-size" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "terminal-size";
       version = "0.3.2.1";
       sha256 = "0n4nvj3dbj9gxfnprgish45asn9z4dipv9j98s8i7g2n8yb3xhmm";
       libraryHaskellDepends = [ base ];
       description = "Get terminal window height and width";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "test-framework" = callPackage
    ({ mkDerivation, ansi-terminal, ansi-wl-pprint, base, containers
     , hostname, old-locale, random, regex-posix, time, xml
     }:
     mkDerivation {
       pname = "test-framework";
       version = "0.8.2.0";
       sha256 = "1hhacrzam6b8f10hyldmjw8pb7frdxh04rfg3farxcxwbnhwgbpm";
       libraryHaskellDepends = [
         ansi-terminal ansi-wl-pprint base containers hostname old-locale
         random regex-posix time xml
       ];
       doCheck = false;
       homepage = "http://haskell.github.io/test-framework/";
       description = "Framework for running and organising tests, with HUnit and QuickCheck support";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "test-framework-hunit" = callPackage
    ({ mkDerivation, base, extensible-exceptions, HUnit, test-framework
     }:
     mkDerivation {
       pname = "test-framework-hunit";
       version = "0.3.0.2";
       sha256 = "1y0b6vg8nfm43v90lxxcydhi6qlxhfy4vpxbzm5ic2w55bh8xjwm";
       revision = "3";
       editedCabalFile = "0i9mlalv7cl1iq43ld5myrnpszq5rxmd79hk495dcb08rglhgl3z";
       libraryHaskellDepends = [
         base extensible-exceptions HUnit test-framework
       ];
       homepage = "https://batterseapower.github.io/test-framework/";
       description = "HUnit support for the test-framework package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "test-framework-quickcheck2" = callPackage
    ({ mkDerivation, base, extensible-exceptions, QuickCheck, random
     , test-framework
     }:
     mkDerivation {
       pname = "test-framework-quickcheck2";
       version = "0.3.0.4";
       sha256 = "0vj834337r6jzr3258cv68ly2sv5999mklpsrfngyk51kywsyqyp";
       revision = "1";
       editedCabalFile = "147ngmfdkskyg7mwsp5w73a4dbx3rp5s38bci3z03kn1m093lxff";
       libraryHaskellDepends = [
         base extensible-exceptions QuickCheck random test-framework
       ];
       homepage = "http://haskell.github.io/test-framework/";
       description = "QuickCheck-2 support for the test-framework package";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "test-framework-th" = callPackage
    ({ mkDerivation, base, haskell-src-exts, language-haskell-extract
     , regex-posix, template-haskell, test-framework
     }:
     mkDerivation {
       pname = "test-framework-th";
       version = "0.2.4";
       sha256 = "12lw7yj02jb9s0i7rb98jjam43j2h0gzmnbj9zi933fx7sg0sy4b";
       libraryHaskellDepends = [
         base haskell-src-exts language-haskell-extract regex-posix
         template-haskell test-framework
       ];
       homepage = "http://github.com/finnsson/test-generator";
       description = "Automagically generate the HUnit- and Quickcheck-bulk-code using Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "text" = callPackage
    ({ mkDerivation, array, base, binary, bytestring, deepseq, ghc-prim
     , integer-gmp
     }:
     mkDerivation {
       pname = "text";
       version = "1.2.3.0";
       sha256 = "06iir7q99rnffzxi8gagn8w1k9m49368sbidgz634fv1gxib3q10";
       configureFlags = [ "-f-integer-simple" ];
       libraryHaskellDepends = [
         array base binary bytestring deepseq ghc-prim integer-gmp
       ];
       doCheck = false;
       homepage = "https://github.com/haskell/text";
       description = "An efficient packed Unicode text type";
       license = stdenv.lib.licenses.bsd2;
     }) {};
  "text-short" = callPackage
    ({ mkDerivation, base, binary, bytestring, deepseq, ghc-prim
     , hashable, text
     }:
     mkDerivation {
       pname = "text-short";
       version = "0.1.2";
       sha256 = "0rqiwgjkgyfy8596swl0s0x2jqk6ddh2h02qxa32az2cs5kviwmk";
       libraryHaskellDepends = [
         base binary bytestring deepseq ghc-prim hashable text
       ];
       doCheck = false;
       description = "Memory-efficient representation of Unicode text strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "tf-random" = callPackage
    ({ mkDerivation, base, primitive, random, time }:
     mkDerivation {
       pname = "tf-random";
       version = "0.5";
       sha256 = "0445r2nns6009fmq0xbfpyv7jpzwv0snccjdg7hwj4xk4z0cwc1f";
       libraryHaskellDepends = [ base primitive random time ];
       description = "High-quality splittable pseudorandom number generator";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-abstraction" = callPackage
    ({ mkDerivation, base, containers, ghc-prim, template-haskell }:
     mkDerivation {
       pname = "th-abstraction";
       version = "0.2.8.0";
       sha256 = "0n17w4q2ykd0nica4sck2wng6md56rfad8x0icl0l8vnzb9nn4ya";
       revision = "1";
       editedCabalFile = "0yr4bj9ypbls0ysmwrgn2nsjb1xpsb12bjaiwbkzp6nf3kljwnnv";
       libraryHaskellDepends = [
         base containers ghc-prim template-haskell
       ];
       testHaskellDepends = [ base containers template-haskell ];
       homepage = "https://github.com/glguy/th-abstraction";
       description = "Nicer interface for reified information about data types";
       license = stdenv.lib.licenses.isc;
     }) {};
  "th-expand-syns" = callPackage
    ({ mkDerivation, base, containers, syb, template-haskell }:
     mkDerivation {
       pname = "th-expand-syns";
       version = "0.4.4.0";
       sha256 = "01prlvh3py5hq5ccjidfyp9ixq2zd88dkbsidyjrpkja6v8m43yc";
       libraryHaskellDepends = [ base containers syb template-haskell ];
       testHaskellDepends = [ base template-haskell ];
       homepage = "https://github.com/DanielSchuessler/th-expand-syns";
       description = "Expands type synonyms in Template Haskell ASTs";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-lift" = callPackage
    ({ mkDerivation, base, ghc-prim, template-haskell, th-abstraction
     }:
     mkDerivation {
       pname = "th-lift";
       version = "0.7.10";
       sha256 = "13c89mr9g4jwrmqxx882ygr1lkvj1chw29p80qv2f3g5wnhlgkmr";
       libraryHaskellDepends = [
         base ghc-prim template-haskell th-abstraction
       ];
       testHaskellDepends = [ base ghc-prim template-haskell ];
       homepage = "http://github.com/mboes/th-lift";
       description = "Derive Template Haskell's Lift class for datatypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-lift-instances" = callPackage
    ({ mkDerivation, base, bytestring, containers, QuickCheck
     , template-haskell, text, th-lift, vector
     }:
     mkDerivation {
       pname = "th-lift-instances";
       version = "0.1.11";
       sha256 = "1f56cp6ckcalld5jchv0kxpjkwcsixd7smd0g7r8cg67ppx6m90x";
       libraryHaskellDepends = [
         base bytestring containers template-haskell text th-lift vector
       ];
       testHaskellDepends = [
         base bytestring containers QuickCheck template-haskell text vector
       ];
       homepage = "http://github.com/bennofs/th-lift-instances/";
       description = "Lift instances for template-haskell for common data types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-orphans" = callPackage
    ({ mkDerivation, base, hspec, hspec-discover, mtl, template-haskell
     , th-lift, th-lift-instances, th-reify-many
     }:
     mkDerivation {
       pname = "th-orphans";
       version = "0.13.6";
       sha256 = "0sfl3pn9kq9da3ji3lsgzgzy82vz6yvsg80dmakc1jvk7awycibp";
       libraryHaskellDepends = [
         base mtl template-haskell th-lift th-lift-instances th-reify-many
       ];
       testHaskellDepends = [ base hspec template-haskell ];
       testToolDepends = [ hspec-discover ];
       description = "Orphan instances for TH datatypes";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "th-reify-many" = callPackage
    ({ mkDerivation, base, containers, mtl, safe, template-haskell
     , th-expand-syns
     }:
     mkDerivation {
       pname = "th-reify-many";
       version = "0.1.8";
       sha256 = "0hzy6hvhvcd6i60vx5cp2b7ggmnnjh9rx4h8bm8xw4grglcaxjnf";
       libraryHaskellDepends = [
         base containers mtl safe template-haskell th-expand-syns
       ];
       testHaskellDepends = [ base template-haskell ];
       homepage = "http://github.com/mgsloan/th-reify-many";
       description = "Recurseively reify template haskell datatype info";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "time-locale-compat" = callPackage
    ({ mkDerivation, base, time }:
     mkDerivation {
       pname = "time-locale-compat";
       version = "0.1.1.4";
       sha256 = "0qmyxf8nz0q6brvplc4s2wsb1bbpq7kb65b69m503g9bgranblgj";
       configureFlags = [ "-f-old-locale" ];
       libraryHaskellDepends = [ base time ];
       homepage = "https://github.com/khibino/haskell-time-locale-compat";
       description = "Compatibile module for time-format locale";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "transformers-base" = callPackage
    ({ mkDerivation, base, stm, transformers, transformers-compat }:
     mkDerivation {
       pname = "transformers-base";
       version = "0.4.4";
       sha256 = "11r3slgpgpra6zi2kjg3g60gvv17b1fh6qxipcpk8n86qx7lk8va";
       revision = "1";
       editedCabalFile = "196pr3a4lhgklyw6nq6rv1j9djwzmvx7xrpp58carxnb55gk06pv";
       libraryHaskellDepends = [
         base stm transformers transformers-compat
       ];
       homepage = "https://github.com/mvv/transformers-base";
       description = "Lift computations from the bottom of a transformer stack";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "transformers-compat" = callPackage
    ({ mkDerivation, base, ghc-prim, transformers }:
     mkDerivation {
       pname = "transformers-compat";
       version = "0.5.1.4";
       sha256 = "17yam0199fh9ndsn9n69jx9nvbsmymzzwbi23dck3dk4q57fz0fq";
       libraryHaskellDepends = [ base ghc-prim transformers ];
       homepage = "http://github.com/ekmett/transformers-compat/";
       description = "A small compatibility shim exposing the new types from transformers 0.3 and 0.4 to older Haskell platforms.";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "typed-process" = callPackage
    ({ mkDerivation, async, base, base64-bytestring, bytestring, hspec
     , process, stm, temporary, transformers
     }:
     mkDerivation {
       pname = "typed-process";
       version = "0.2.2.0";
       sha256 = "0c6gvgvjyncbni9a5bvpbglknd4yclr3d3hfg9bhgahmkj40dva2";
       libraryHaskellDepends = [
         async base bytestring process stm transformers
       ];
       testHaskellDepends = [
         async base base64-bytestring bytestring hspec process stm temporary
         transformers
       ];
       homepage = "https://haskell-lang.org/library/typed-process";
       description = "Run external processes, with strong typing of streams";
       license = stdenv.lib.licenses.mit;
     }) {};
  "unbounded-delays" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "unbounded-delays";
       version = "0.1.1.0";
       sha256 = "1ir9fghbrc214c97bwafk5ck6cacxz1pdnq4i18p604d1b8zg9wa";
       libraryHaskellDepends = [ base ];
       homepage = "https://github.com/basvandijk/unbounded-delays";
       description = "Unbounded thread delays and timeouts";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uniplate" = callPackage
    ({ mkDerivation, base, containers, hashable, syb
     , unordered-containers
     }:
     mkDerivation {
       pname = "uniplate";
       version = "1.6.12";
       sha256 = "1dx8f9aw27fz8kw0ad1nm6355w5rdl7bjvb427v2bsgnng30pipw";
       libraryHaskellDepends = [
         base containers hashable syb unordered-containers
       ];
       homepage = "http://community.haskell.org/~ndm/uniplate/";
       description = "Help writing simple, concise and fast generic operations";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "units-parser" = callPackage
    ({ mkDerivation, base, containers, mtl, multimap, parsec, syb
     , tasty, tasty-hunit, template-haskell
     }:
     mkDerivation {
       pname = "units-parser";
       version = "0.1.1.2";
       sha256 = "06kmrqswlivsas183jswsnqi21rmdh6cqw392b3ycj2x5avghqqa";
       libraryHaskellDepends = [ base containers mtl multimap parsec ];
       testHaskellDepends = [
         base containers mtl multimap parsec syb tasty tasty-hunit
         template-haskell
       ];
       description = "A parser for units of measure";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unix-compat" = callPackage
    ({ mkDerivation, base, unix }:
     mkDerivation {
       pname = "unix-compat";
       version = "0.5.0.1";
       sha256 = "1gdf3h2knbymkivm784vq51mbcyj5y91r480awyxj5cw8gh9kwn2";
       revision = "1";
       editedCabalFile = "0yrdy4dz0zskgpw7c4wgkwskgayqxvch37axwka5z4g5gmic4mnn";
       libraryHaskellDepends = [ base unix ];
       homepage = "http://github.com/jystic/unix-compat";
       description = "Portable POSIX-compatibility layer";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unix-time" = callPackage
    ({ mkDerivation, base, binary, bytestring, doctest, hspec
     , old-locale, old-time, QuickCheck, time
     }:
     mkDerivation {
       pname = "unix-time";
       version = "0.3.8";
       sha256 = "051slgpid5cxiaw203ky0ql3823h28fcjs08axkzd4265wrvv8fw";
       libraryHaskellDepends = [ base binary bytestring old-time ];
       testHaskellDepends = [
         base bytestring doctest hspec old-locale old-time QuickCheck time
       ];
       description = "Unix time parser/formatter and utilities";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "unliftio" = callPackage
    ({ mkDerivation, async, base, deepseq, directory, filepath, hspec
     , process, stm, time, transformers, unix, unliftio-core
     }:
     mkDerivation {
       pname = "unliftio";
       version = "0.2.7.0";
       sha256 = "0qql93lq5w7qghl454cc3s1i8v1jb4h08n82fqkw0kli4g3g9njs";
       libraryHaskellDepends = [
         async base deepseq directory filepath process stm time transformers
         unix unliftio-core
       ];
       testHaskellDepends = [
         async base deepseq directory filepath hspec process stm time
         transformers unix unliftio-core
       ];
       homepage = "https://github.com/fpco/unliftio/tree/master/unliftio#readme";
       description = "The MonadUnliftIO typeclass for unlifting monads to IO (batteries included)";
       license = stdenv.lib.licenses.mit;
     }) {};
  "unliftio-core" = callPackage
    ({ mkDerivation, base, transformers }:
     mkDerivation {
       pname = "unliftio-core";
       version = "0.1.1.0";
       sha256 = "1193fplsjm1lcr05xwvkj1rsyzx74i755f6kw3ikmxbsv0bv0l3m";
       revision = "1";
       editedCabalFile = "16bjwcsaghqqmyi69rq65dn3ydifyfaabq3ns37apdm00mwqbcj2";
       libraryHaskellDepends = [ base transformers ];
       homepage = "https://github.com/fpco/unliftio/tree/master/unliftio-core#readme";
       description = "The MonadUnliftIO typeclass for unlifting monads to IO";
       license = stdenv.lib.licenses.mit;
     }) {};
  "unordered-containers" = callPackage
    ({ mkDerivation, base, ChasingBottoms, containers, deepseq
     , hashable, HUnit, QuickCheck, test-framework, test-framework-hunit
     , test-framework-quickcheck2
     }:
     mkDerivation {
       pname = "unordered-containers";
       version = "0.2.9.0";
       sha256 = "0l4264p0av12cc6i8gls13q8y27x12z2ar4x34n3x59y99fcnc37";
       libraryHaskellDepends = [ base deepseq hashable ];
       testHaskellDepends = [
         base ChasingBottoms containers hashable HUnit QuickCheck
         test-framework test-framework-hunit test-framework-quickcheck2
       ];
       homepage = "https://github.com/tibbe/unordered-containers";
       description = "Efficient hashing-based container types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uom-plugin" = callPackage
    ({ mkDerivation, base, containers, deepseq, ghc
     , ghc-tcplugins-extra, hlint, tasty, tasty-hunit, template-haskell
     , units-parser
     }:
     mkDerivation {
       pname = "uom-plugin";
       version = "0.3.0.0";
       sha256 = "16a6l88z49nl0nqn3l7mki8rr39hh3i4wsn1q31gwahn3kfkzgll";
       libraryHaskellDepends = [
         base containers deepseq ghc ghc-tcplugins-extra template-haskell
         units-parser
       ];
       testHaskellDepends = [ base hlint tasty tasty-hunit ];
       doCheck = false;
       homepage = "https://github.com/adamgundry/uom-plugin#readme";
       description = "Units of measure as a GHC typechecker plugin";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uri-bytestring" = callPackage
    ({ mkDerivation, attoparsec, base, base-compat, blaze-builder
     , bytestring, containers, criterion, deepseq, deepseq-generics
     , generics-sop, HUnit, network-uri, QuickCheck
     , quickcheck-instances, semigroups, tasty, tasty-hunit
     , tasty-quickcheck, template-haskell, th-lift-instances
     , transformers
     }:
     mkDerivation {
       pname = "uri-bytestring";
       version = "0.3.2.0";
       sha256 = "1q04j5ybvk37zk2m0bkjwyhblz0ymdj0cn4rvsvdca1ikn5xdv5c";
       libraryHaskellDepends = [
         attoparsec base blaze-builder bytestring containers
         template-haskell th-lift-instances
       ];
       testHaskellDepends = [
         attoparsec base base-compat blaze-builder bytestring containers
         generics-sop HUnit QuickCheck quickcheck-instances semigroups tasty
         tasty-hunit tasty-quickcheck transformers
       ];
       benchmarkHaskellDepends = [
         base blaze-builder bytestring criterion deepseq deepseq-generics
         network-uri
       ];
       homepage = "https://github.com/Soostone/uri-bytestring";
       description = "Haskell URI parsing as ByteStrings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "utf8-string" = callPackage
    ({ mkDerivation, base, bytestring }:
     mkDerivation {
       pname = "utf8-string";
       version = "1.0.1.1";
       sha256 = "0h7imvxkahiy8pzr8cpsimifdfvv18lizrb33k6mnq70rcx9w2zv";
       revision = "3";
       editedCabalFile = "02vhj5gykkqa2dyn7s6gn8is1b5fdn9xcqqvlls268g7cpv6rk38";
       libraryHaskellDepends = [ base bytestring ];
       homepage = "http://github.com/glguy/utf8-string/";
       description = "Support for reading and writing UTF8 Strings";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "uuid-types" = callPackage
    ({ mkDerivation, base, binary, bytestring, deepseq, hashable
     , random, text
     }:
     mkDerivation {
       pname = "uuid-types";
       version = "1.0.3";
       sha256 = "1zdka5jnm1h6k36w3nr647yf3b5lqb336g3fkprhd6san9x52xlj";
       revision = "1";
       editedCabalFile = "0iwwj07gp28g357hv76k4h8pvlzamvchnw003cv3qk778pcpx201";
       libraryHaskellDepends = [
         base binary bytestring deepseq hashable random text
       ];
       doCheck = false;
       homepage = "https://github.com/aslatter/uuid";
       description = "Type definitions for Universally Unique Identifiers";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vault" = callPackage
    ({ mkDerivation, base, containers, hashable, semigroups
     , unordered-containers
     }:
     mkDerivation {
       pname = "vault";
       version = "0.3.1.2";
       sha256 = "072mbrihsdsb8c6xvg6lvk0rqjgvxvi8qkg4n6wwym5hq0pfa04y";
       libraryHaskellDepends = [
         base containers hashable semigroups unordered-containers
       ];
       homepage = "https://github.com/HeinrichApfelmus/vault";
       description = "a persistent store for values of arbitrary types";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector" = callPackage
    ({ mkDerivation, base, deepseq, ghc-prim, primitive }:
     mkDerivation {
       pname = "vector";
       version = "0.12.0.1";
       sha256 = "0yrx2ypiaxahvaz84af5bi855hd3107kxkbqc8km29nsp5wyw05i";
       revision = "3";
       editedCabalFile = "0y5rh8k710i2a3p1h2rghvr5cfg78p5h0kbfi7ifxqqf6pzlyr1x";
       libraryHaskellDepends = [ base deepseq ghc-prim primitive ];
       doCheck = false;
       homepage = "https://github.com/haskell/vector";
       description = "Efficient Arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-algorithms" = callPackage
    ({ mkDerivation, base, bytestring, containers, primitive
     , QuickCheck, vector
     }:
     mkDerivation {
       pname = "vector-algorithms";
       version = "0.7.0.1";
       sha256 = "0w4hf598lpxfg58rnimcqxrbnpqq2jmpjx82qa5md3q6r90hlipd";
       revision = "1";
       editedCabalFile = "1996aj239vasr4hd5c0pi9i0bd08r6clzr76nqvf3hc5kjs7vml2";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [ base bytestring primitive vector ];
       testHaskellDepends = [
         base bytestring containers QuickCheck vector
       ];
       doCheck = false;
       homepage = "http://code.haskell.org/~dolio/";
       description = "Efficient algorithms for vector arrays";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-binary-instances" = callPackage
    ({ mkDerivation, base, binary, bytestring, criterion, deepseq
     , tasty, tasty-quickcheck, vector
     }:
     mkDerivation {
       pname = "vector-binary-instances";
       version = "0.2.4";
       sha256 = "1y236jb72iab9ska1mc48z6yb0xgwmj45laaqdyjxksd84z7hbrb";
       revision = "1";
       editedCabalFile = "196frl4akhfk7xf1nxzn8lmq99dxhzhsimanswn9yy7ym8zhki4i";
       libraryHaskellDepends = [ base binary vector ];
       testHaskellDepends = [ base binary tasty tasty-quickcheck vector ];
       benchmarkHaskellDepends = [
         base binary bytestring criterion deepseq vector
       ];
       homepage = "https://github.com/bos/vector-binary-instances";
       description = "Instances of Data.Binary and Data.Serialize for vector";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "vector-builder" = callPackage
    ({ mkDerivation, base, base-prelude, semigroups, vector }:
     mkDerivation {
       pname = "vector-builder";
       version = "0.3.6";
       sha256 = "06d2pa1fb3ydrl7l6rjazqyxv5i73v65x2f5fp0ypjxfbm6jsmn8";
       libraryHaskellDepends = [ base base-prelude semigroups vector ];
       doCheck = false;
       homepage = "https://github.com/nikita-volkov/vector-builder";
       description = "Vector builder";
       license = stdenv.lib.licenses.mit;
     }) {};
  "vector-th-unbox" = callPackage
    ({ mkDerivation, base, data-default, template-haskell, vector }:
     mkDerivation {
       pname = "vector-th-unbox";
       version = "0.2.1.6";
       sha256 = "0d82x55f5vvr1jvaia382m23rs690lg55pvavv8f4ph0y6kd91xy";
       libraryHaskellDepends = [ base template-haskell vector ];
       testHaskellDepends = [ base data-default vector ];
       description = "Deriver for Data.Vector.Unboxed using Template Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "void" = callPackage
    ({ mkDerivation, base }:
     mkDerivation {
       pname = "void";
       version = "0.7.2";
       sha256 = "0aygw0yb1h3yhmfl3bkwh5d3h0l4mmsxz7j53vdm6jryl1kgxzyk";
       libraryHaskellDepends = [ base ];
       homepage = "http://github.com/ekmett/void";
       description = "A Haskell 98 logically uninhabited data type";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai" = callPackage
    ({ mkDerivation, base, bytestring, hspec, hspec-discover
     , http-types, network, text, transformers, vault
     }:
     mkDerivation {
       pname = "wai";
       version = "3.2.1.2";
       sha256 = "0jr3b2789wa4m6mxkz12ynz4lfsqmgbrcy0am8karyqr3x3528r8";
       libraryHaskellDepends = [
         base bytestring http-types network text transformers vault
       ];
       testHaskellDepends = [ base bytestring hspec ];
       testToolDepends = [ hspec-discover ];
       homepage = "https://github.com/yesodweb/wai";
       description = "Web Application Interface";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-app-static" = callPackage
    ({ mkDerivation, base, blaze-html, blaze-markup, bytestring
     , containers, cryptonite, directory, file-embed, filepath, hspec
     , http-date, http-types, memory, mime-types, mockery, network
     , old-locale, optparse-applicative, template-haskell, temporary
     , text, time, transformers, unix-compat, unordered-containers, wai
     , wai-extra, warp, zlib
     }:
     mkDerivation {
       pname = "wai-app-static";
       version = "3.1.6.2";
       sha256 = "0gnwq6ad5m8w8sqq4dzpz23l5rjdphfsf8h9h27lrvv1prkabc6h";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base blaze-html blaze-markup bytestring containers cryptonite
         directory file-embed filepath http-date http-types memory
         mime-types old-locale optparse-applicative template-haskell text
         time transformers unix-compat unordered-containers wai wai-extra
         warp zlib
       ];
       executableHaskellDepends = [
         base bytestring containers directory mime-types text
       ];
       testHaskellDepends = [
         base bytestring filepath hspec http-date http-types mime-types
         mockery network old-locale temporary text time transformers
         unix-compat wai wai-extra zlib
       ];
       homepage = "http://www.yesodweb.com/book/web-application-interface";
       description = "WAI application for static serving";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-cors" = callPackage
    ({ mkDerivation, attoparsec, base, base-unicode-symbols, bytestring
     , case-insensitive, directory, filepath, http-types, mtl, network
     , process, tasty, tasty-hunit, text, transformers, wai, wai-extra
     , wai-websockets, warp, websockets
     }:
     mkDerivation {
       pname = "wai-cors";
       version = "0.2.6";
       sha256 = "11m9d8hn9pb9brprz0kglldmcqj83kjkjdwdpxdbl12430ii1ina";
       enableSeparateDataOutput = true;
       libraryHaskellDepends = [
         attoparsec base base-unicode-symbols bytestring case-insensitive
         http-types mtl transformers wai
       ];
       testHaskellDepends = [
         base base-unicode-symbols directory filepath http-types network
         process tasty tasty-hunit text wai wai-extra wai-websockets warp
         websockets
       ];
       doCheck = false;
       homepage = "https://github.com/larskuhtz/wai-cors";
       description = "CORS for WAI";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-extra" = callPackage
    ({ mkDerivation, aeson, ansi-terminal, base, base64-bytestring
     , blaze-builder, bytestring, case-insensitive, containers, cookie
     , data-default-class, deepseq, directory, fast-logger, hspec
     , http-types, HUnit, iproute, lifted-base, network, old-locale
     , resourcet, streaming-commons, stringsearch, text, time
     , transformers, unix, unix-compat, vault, void, wai, wai-logger
     , word8, zlib
     }:
     mkDerivation {
       pname = "wai-extra";
       version = "3.0.22.0";
       sha256 = "0rwksl5jkhkgd10qi0wvhfw28g1qci60pc6chrv5bg0w0xqkv532";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson ansi-terminal base base64-bytestring blaze-builder bytestring
         case-insensitive containers cookie data-default-class deepseq
         directory fast-logger http-types iproute lifted-base network
         old-locale resourcet streaming-commons stringsearch text time
         transformers unix unix-compat vault void wai wai-logger word8 zlib
       ];
       testHaskellDepends = [
         base blaze-builder bytestring case-insensitive cookie fast-logger
         hspec http-types HUnit resourcet text time transformers wai zlib
       ];
       homepage = "http://github.com/yesodweb/wai";
       description = "Provides some basic WAI handlers and middleware";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wai-logger" = callPackage
    ({ mkDerivation, base, byteorder, bytestring, case-insensitive
     , doctest, fast-logger, http-types, network, unix, unix-time, wai
     }:
     mkDerivation {
       pname = "wai-logger";
       version = "2.3.2";
       sha256 = "0w5ldq4gplc16zzk5ikmbbjw79imaqvw8p6lylaw3hlsbn3zzm4d";
       libraryHaskellDepends = [
         base byteorder bytestring case-insensitive fast-logger http-types
         network unix unix-time wai
       ];
       testHaskellDepends = [ base doctest ];
       doCheck = false;
       description = "A logging system for WAI";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "wai-websockets" = callPackage
    ({ mkDerivation, base, bytestring, case-insensitive, file-embed
     , http-types, network, text, transformers, wai, wai-app-static
     , warp, websockets
     }:
     mkDerivation {
       pname = "wai-websockets";
       version = "3.0.1.2";
       sha256 = "0b2xmdsrsqpssyib53wbr6r8hf75789ndyyanv37sv99iyqcwz4i";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         base bytestring case-insensitive http-types network transformers
         wai websockets
       ];
       executableHaskellDepends = [
         base bytestring case-insensitive file-embed http-types network text
         transformers wai wai-app-static warp websockets
       ];
       homepage = "http://github.com/yesodweb/wai";
       description = "Provide a bridge between WAI and the websockets package";
       license = stdenv.lib.licenses.mit;
     }) {};
  "warp" = callPackage
    ({ mkDerivation, array, async, auto-update, base, bsb-http-chunked
     , bytestring, case-insensitive, containers, directory, doctest
     , gauge, ghc-prim, hashable, hspec, http-client, http-date
     , http-types, http2, HUnit, iproute, lifted-base, network, process
     , QuickCheck, silently, simple-sendfile, stm, streaming-commons
     , text, time, transformers, unix, unix-compat, vault, wai, word8
     }:
     mkDerivation {
       pname = "warp";
       version = "3.2.23";
       sha256 = "12v9qhi4hyp0sb90yddsax16jj7x47nmqwn53sv7b5nszcxgzam0";
       libraryHaskellDepends = [
         array async auto-update base bsb-http-chunked bytestring
         case-insensitive containers ghc-prim hashable http-date http-types
         http2 iproute network simple-sendfile stm streaming-commons text
         unix unix-compat vault wai word8
       ];
       testHaskellDepends = [
         array async auto-update base bsb-http-chunked bytestring
         case-insensitive containers directory doctest ghc-prim hashable
         hspec http-client http-date http-types http2 HUnit iproute
         lifted-base network process QuickCheck silently simple-sendfile stm
         streaming-commons text time transformers unix unix-compat vault wai
         word8
       ];
       benchmarkHaskellDepends = [
         auto-update base bytestring containers gauge hashable http-date
         http-types network unix unix-compat
       ];
       homepage = "http://github.com/yesodweb/wai";
       description = "A fast, light-weight web server for WAI applications";
       license = stdenv.lib.licenses.mit;
     }) {};
  "websockets" = callPackage
    ({ mkDerivation, attoparsec, base, base64-bytestring, binary
     , bytestring, bytestring-builder, case-insensitive, containers
     , criterion, entropy, HUnit, network, QuickCheck, random, SHA
     , streaming-commons, test-framework, test-framework-hunit
     , test-framework-quickcheck2, text
     }:
     mkDerivation {
       pname = "websockets";
       version = "0.12.5.1";
       sha256 = "1v9zmd34bmh0y02njff4n1vkp1d5jdpq9dlva0z7sr0glv8c3drz";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         attoparsec base base64-bytestring binary bytestring
         bytestring-builder case-insensitive containers entropy network
         random SHA streaming-commons text
       ];
       testHaskellDepends = [
         attoparsec base base64-bytestring binary bytestring
         bytestring-builder case-insensitive containers entropy HUnit
         network QuickCheck random SHA streaming-commons test-framework
         test-framework-hunit test-framework-quickcheck2 text
       ];
       benchmarkHaskellDepends = [
         attoparsec base base64-bytestring binary bytestring
         bytestring-builder case-insensitive containers criterion entropy
         network random SHA text
       ];
       doCheck = false;
       homepage = "http://jaspervdj.be/websockets";
       description = "A sensible and clean way to write WebSocket-capable servers in Haskell";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "weigh" = callPackage
    ({ mkDerivation, base, deepseq, mtl, process, split, temporary }:
     mkDerivation {
       pname = "weigh";
       version = "0.0.12";
       sha256 = "0zw2a997gxgdzqmd7j730kxgynzmjvvlkw84dajmfzf1v9pbij7x";
       libraryHaskellDepends = [
         base deepseq mtl process split temporary
       ];
       testHaskellDepends = [ base deepseq ];
       homepage = "https://github.com/fpco/weigh#readme";
       description = "Measure allocations of a Haskell functions/values";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "with-location" = callPackage
    ({ mkDerivation, base, hspec }:
     mkDerivation {
       pname = "with-location";
       version = "0.1.0";
       sha256 = "1rzxvsyh8x3ql3zh7gyw9hjx9bl4v73h0y5kzgaxcfcdn86dg49c";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec ];
       homepage = "https://github.com/sol/with-location#readme";
       description = "Use ImplicitParams-based source locations in a backward compatible way";
       license = stdenv.lib.licenses.mit;
     }) {};
  "wl-pprint-annotated" = callPackage
    ({ mkDerivation, base, containers, deepseq, tasty, tasty-hunit
     , text
     }:
     mkDerivation {
       pname = "wl-pprint-annotated";
       version = "0.1.0.0";
       sha256 = "0c2996x5gdrif1l0lfwlqnka7xp5diac74rckv0jasv2i0333kmp";
       libraryHaskellDepends = [ base containers deepseq text ];
       testHaskellDepends = [
         base containers deepseq tasty tasty-hunit text
       ];
       homepage = "https://github.com/minad/wl-pprint-annotated#readme";
       description = "Wadler/Leijen pretty printer with annotations and slightly modernized API";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "word8" = callPackage
    ({ mkDerivation, base, bytestring, criterion, hspec }:
     mkDerivation {
       pname = "word8";
       version = "0.1.3";
       sha256 = "12jx7f13d2h1djq4fh4dyrab61sm49mj1w61j3rzp2vjfm696c16";
       libraryHaskellDepends = [ base ];
       testHaskellDepends = [ base hspec ];
       benchmarkHaskellDepends = [ base bytestring criterion ];
       description = "Word8 library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "xml" = callPackage
    ({ mkDerivation, base, bytestring, text }:
     mkDerivation {
       pname = "xml";
       version = "1.3.14";
       sha256 = "0g814lj7vaxvib2g3r734221k80k7ap9czv9hinifn8syals3l9j";
       libraryHaskellDepends = [ base bytestring text ];
       homepage = "http://code.galois.com";
       description = "A simple XML library";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "yaml" = callPackage
    ({ mkDerivation, aeson, attoparsec, base, base-compat, bytestring
     , conduit, containers, directory, filepath, hspec, HUnit, mockery
     , resourcet, scientific, semigroups, template-haskell, temporary
     , text, transformers, unordered-containers, vector
     }:
     mkDerivation {
       pname = "yaml";
       version = "0.8.32";
       sha256 = "0cbsyh4ilvjzq1q7pxls43k6pdqxg1l85xzibcwpbvmlvrizh86w";
       isLibrary = true;
       isExecutable = true;
       libraryHaskellDepends = [
         aeson attoparsec base bytestring conduit containers directory
         filepath resourcet scientific semigroups template-haskell text
         transformers unordered-containers vector
       ];
       testHaskellDepends = [
         aeson attoparsec base base-compat bytestring conduit containers
         directory filepath hspec HUnit mockery resourcet scientific
         semigroups template-haskell temporary text transformers
         unordered-containers vector
       ];
       homepage = "https://github.com/snoyberg/yaml#readme";
       description = "Support for parsing and rendering YAML documents";
       license = stdenv.lib.licenses.bsd3;
     }) {};
  "zlib" = callPackage
    ({ mkDerivation, base, bytestring, zlib }:
     mkDerivation {
       pname = "zlib";
       version = "0.6.2";
       sha256 = "1vbzf0awb6zb456xf48za1kl22018646cfzq4frvxgb9ay97vk0d";
       libraryHaskellDepends = [ base bytestring ];
       librarySystemDepends = [ zlib ];
       doCheck = false;
       description = "Compression and decompression in the gzip and zlib formats";
       license = stdenv.lib.licenses.bsd3;
     }) {inherit (pkgs) zlib;};

}
