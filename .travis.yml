# This Travis job script has been generated by a script via
#
#   haskell-ci '--output=.travis.yml' '--config=cabal.haskell-ci' 'cabal.project'
#
# For more information, see https://github.com/haskell-CI/haskell-ci
#
# version: 0.9.20200406
#
version: ~> 1.0
language: c
os: linux
dist: xenial
git:
  # whether to recursively clone submodules
  submodules: true
cache:
  directories:
    - $HOME/.cabal/packages
    - $HOME/.cabal/store
    - $HOME/.hlint
before_cache:
  - rm -fv $CABALHOME/packages/hackage.haskell.org/build-reports.log
  # remove files that are regenerated by 'cabal update'
  - rm -fv $CABALHOME/packages/hackage.haskell.org/00-index.*
  - rm -fv $CABALHOME/packages/hackage.haskell.org/*.json
  - rm -fv $CABALHOME/packages/hackage.haskell.org/01-index.cache
  - rm -fv $CABALHOME/packages/hackage.haskell.org/01-index.tar
  - rm -fv $CABALHOME/packages/hackage.haskell.org/01-index.tar.idx
  - rm -rfv $CABALHOME/packages/head.hackage
jobs:
  include:
    - compiler: ghc-8.2.2
      addons: {"apt":{"sources":[{"sourceline":"deb http://ppa.launchpad.net/hvr/ghc/ubuntu xenial main","key_url":"https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x063dab2bdc0b3f9fcebc378bff3aeacef6f88286"}],"packages":["ghc-8.2.2","cabal-install-3.2"]}}
      os: linux
before_install:
  - HC=$(echo "/opt/$CC/bin/ghc" | sed 's/-/\//')
  - WITHCOMPILER="-w $HC"
  - HADDOCK=$(echo "/opt/$CC/bin/haddock" | sed 's/-/\//')
  - HCPKG="$HC-pkg"
  - unset CC
  - CABAL=/opt/ghc/bin/cabal
  - CABALHOME=$HOME/.cabal
  - export PATH="$CABALHOME/bin:$PATH"
  - TOP=$(pwd)
  - "HCNUMVER=$(${HC} --numeric-version|perl -ne '/^(\\d+)\\.(\\d+)\\.(\\d+)(\\.(\\d+))?$/; print(10000 * $1 + 100 * $2 + ($3 == 0 ? $5 != 1 : $3))')"
  - echo $HCNUMVER
  - CABAL="$CABAL -vnormal+nowrap"
  - set -o pipefail
  - TEST=--enable-tests
  - BENCH=--enable-benchmarks
  - BENCH=--disable-benchmarks
  - HEADHACKAGE=false
  - rm -f $CABALHOME/config
  - |
    echo "verbose: normal +nowrap +markoutput"          >> $CABALHOME/config
    echo "remote-build-reporting: anonymous"            >> $CABALHOME/config
    echo "write-ghc-environment-files: always"          >> $CABALHOME/config
    echo "remote-repo-cache: $CABALHOME/packages"       >> $CABALHOME/config
    echo "logs-dir:          $CABALHOME/logs"           >> $CABALHOME/config
    echo "world-file:        $CABALHOME/world"          >> $CABALHOME/config
    echo "extra-prog-path:   $CABALHOME/bin"            >> $CABALHOME/config
    echo "symlink-bindir:    $CABALHOME/bin"            >> $CABALHOME/config
    echo "installdir:        $CABALHOME/bin"            >> $CABALHOME/config
    echo "build-summary:     $CABALHOME/logs/build.log" >> $CABALHOME/config
    echo "store-dir:         $CABALHOME/store"          >> $CABALHOME/config
    echo "install-dirs user"                            >> $CABALHOME/config
    echo "  prefix: $CABALHOME"                         >> $CABALHOME/config
    echo "repository hackage.haskell.org"               >> $CABALHOME/config
    echo "  url: http://hackage.haskell.org/"           >> $CABALHOME/config
install:
  - ${CABAL} --version
  - echo "$(${HC} --version) [$(${HC} --print-project-git-commit-id 2> /dev/null || echo '?')]"
  - |
    echo "program-default-options"                >> $CABALHOME/config
    echo "  ghc-options: $GHCJOBS +RTS -M6G -RTS" >> $CABALHOME/config
  - cat $CABALHOME/config
  - rm -fv cabal.project cabal.project.local cabal.project.freeze
  - travis_retry ${CABAL} v2-update -v
  # Generate cabal.project
  - rm -rf cabal.project cabal.project.local cabal.project.freeze
  - touch cabal.project
  - |
    echo "packages: lang-haskell/clip" >> cabal.project
    echo "packages: lang-haskell/cmd" >> cabal.project
    echo "packages: lang-haskell/comp" >> cabal.project
    echo "packages: lang-haskell/detour-via-sci" >> cabal.project
    echo "packages: lang-haskell/detour-via-uom" >> cabal.project
    echo "packages: lang-haskell/earth" >> cabal.project
    echo "packages: lang-haskell/flare-timing" >> cabal.project
    echo "packages: lang-haskell/fsdb" >> cabal.project
    echo "packages: lang-haskell/gap" >> cabal.project
    echo "packages: lang-haskell/igc" >> cabal.project
    echo "packages: lang-haskell/kml" >> cabal.project
    echo "packages: lang-haskell/latlng" >> cabal.project
    echo "packages: lang-haskell/lookup" >> cabal.project
    echo "packages: lang-haskell/mask" >> cabal.project
    echo "packages: lang-haskell/route" >> cabal.project
    echo "packages: lang-haskell/scribe" >> cabal.project
    echo "packages: lang-haskell/siggy-chardust" >> cabal.project
    echo "packages: lang-haskell/span" >> cabal.project
    echo "packages: lang-haskell/task" >> cabal.project
    echo "packages: lang-haskell/tasty-compare" >> cabal.project
    echo "packages: lang-haskell/time" >> cabal.project
    echo "packages: lang-haskell/track" >> cabal.project
    echo "packages: lang-haskell/units" >> cabal.project
    echo "packages: lang-haskell/zone" >> cabal.project
    echo "packages: lang-haskell/hcoord/hcoord" >> cabal.project
    echo "packages: lang-haskell/hcoord/hcoord-utm" >> cabal.project
  - echo 'package flight-clip' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-cmd' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-comp' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package detour-via-sci' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package detour-via-uom' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-earth' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flare-timing' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-fsdb' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-gap' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-igc' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-kml' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-latlng' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-lookup' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-mask' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-route' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-scribe' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package siggy-chardust' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-span' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-task' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package tasty-compare' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-time' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-track' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-units' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-zone' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package hcoord' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package hcoord-utm' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - |
  - "for pkg in $($HCPKG list --simple-output); do echo $pkg | sed 's/-[^-]*$//' | (grep -vE -- '^(detour-via-sci|detour-via-uom|flare-timing|flight-clip|flight-cmd|flight-comp|flight-earth|flight-fsdb|flight-gap|flight-igc|flight-kml|flight-latlng|flight-lookup|flight-mask|flight-route|flight-scribe|flight-span|flight-task|flight-time|flight-track|flight-units|flight-zone|hcoord|hcoord-utm|siggy-chardust|tasty-compare)$' || true) | sed 's/^/constraints: /' | sed 's/$/ installed/' >> cabal.project.local; done"
  - cat cabal.project || true
  - cat cabal.project.local || true
  - if [ -f "lang-haskell/clip/configure.ac" ]; then (cd "lang-haskell/clip" && autoreconf -i); fi
  - if [ -f "lang-haskell/cmd/configure.ac" ]; then (cd "lang-haskell/cmd" && autoreconf -i); fi
  - if [ -f "lang-haskell/comp/configure.ac" ]; then (cd "lang-haskell/comp" && autoreconf -i); fi
  - if [ -f "lang-haskell/detour-via-sci/configure.ac" ]; then (cd "lang-haskell/detour-via-sci" && autoreconf -i); fi
  - if [ -f "lang-haskell/detour-via-uom/configure.ac" ]; then (cd "lang-haskell/detour-via-uom" && autoreconf -i); fi
  - if [ -f "lang-haskell/earth/configure.ac" ]; then (cd "lang-haskell/earth" && autoreconf -i); fi
  - if [ -f "lang-haskell/flare-timing/configure.ac" ]; then (cd "lang-haskell/flare-timing" && autoreconf -i); fi
  - if [ -f "lang-haskell/fsdb/configure.ac" ]; then (cd "lang-haskell/fsdb" && autoreconf -i); fi
  - if [ -f "lang-haskell/gap/configure.ac" ]; then (cd "lang-haskell/gap" && autoreconf -i); fi
  - if [ -f "lang-haskell/igc/configure.ac" ]; then (cd "lang-haskell/igc" && autoreconf -i); fi
  - if [ -f "lang-haskell/kml/configure.ac" ]; then (cd "lang-haskell/kml" && autoreconf -i); fi
  - if [ -f "lang-haskell/latlng/configure.ac" ]; then (cd "lang-haskell/latlng" && autoreconf -i); fi
  - if [ -f "lang-haskell/lookup/configure.ac" ]; then (cd "lang-haskell/lookup" && autoreconf -i); fi
  - if [ -f "lang-haskell/mask/configure.ac" ]; then (cd "lang-haskell/mask" && autoreconf -i); fi
  - if [ -f "lang-haskell/route/configure.ac" ]; then (cd "lang-haskell/route" && autoreconf -i); fi
  - if [ -f "lang-haskell/scribe/configure.ac" ]; then (cd "lang-haskell/scribe" && autoreconf -i); fi
  - if [ -f "lang-haskell/siggy-chardust/configure.ac" ]; then (cd "lang-haskell/siggy-chardust" && autoreconf -i); fi
  - if [ -f "lang-haskell/span/configure.ac" ]; then (cd "lang-haskell/span" && autoreconf -i); fi
  - if [ -f "lang-haskell/task/configure.ac" ]; then (cd "lang-haskell/task" && autoreconf -i); fi
  - if [ -f "lang-haskell/tasty-compare/configure.ac" ]; then (cd "lang-haskell/tasty-compare" && autoreconf -i); fi
  - if [ -f "lang-haskell/time/configure.ac" ]; then (cd "lang-haskell/time" && autoreconf -i); fi
  - if [ -f "lang-haskell/track/configure.ac" ]; then (cd "lang-haskell/track" && autoreconf -i); fi
  - if [ -f "lang-haskell/units/configure.ac" ]; then (cd "lang-haskell/units" && autoreconf -i); fi
  - if [ -f "lang-haskell/zone/configure.ac" ]; then (cd "lang-haskell/zone" && autoreconf -i); fi
  - if [ -f "lang-haskell/hcoord/hcoord/configure.ac" ]; then (cd "lang-haskell/hcoord/hcoord" && autoreconf -i); fi
  - if [ -f "lang-haskell/hcoord/hcoord-utm/configure.ac" ]; then (cd "lang-haskell/hcoord/hcoord-utm" && autoreconf -i); fi
  - ${CABAL} v2-freeze $WITHCOMPILER ${TEST} ${BENCH}
  - "cat cabal.project.freeze | sed -E 's/^(constraints: *| *)//' | sed 's/any.//'"
  - rm  cabal.project.freeze
  - travis_wait 40 ${CABAL} v2-build $WITHCOMPILER ${TEST} ${BENCH} --dep -j2 all
  - travis_wait 40 ${CABAL} v2-build $WITHCOMPILER --disable-tests --disable-benchmarks --dep -j2 all
script:
  - DISTDIR=$(mktemp -d /tmp/dist-test.XXXX)
  # Packaging...
  - ${CABAL} v2-sdist all
  # Unpacking...
  - mv dist-newstyle/sdist/*.tar.gz ${DISTDIR}/
  - cd ${DISTDIR} || false
  - find . -maxdepth 1 -type f -name '*.tar.gz' -exec tar -xvf '{}' \;
  - find . -maxdepth 1 -type f -name '*.tar.gz' -exec rm       '{}' \;
  - PKGDIR_flight_clip="$(find . -maxdepth 1 -type d -regex '.*/flight-clip-[0-9.]*')"
  - PKGDIR_flight_cmd="$(find . -maxdepth 1 -type d -regex '.*/flight-cmd-[0-9.]*')"
  - PKGDIR_flight_comp="$(find . -maxdepth 1 -type d -regex '.*/flight-comp-[0-9.]*')"
  - PKGDIR_detour_via_sci="$(find . -maxdepth 1 -type d -regex '.*/detour-via-sci-[0-9.]*')"
  - PKGDIR_detour_via_uom="$(find . -maxdepth 1 -type d -regex '.*/detour-via-uom-[0-9.]*')"
  - PKGDIR_flight_earth="$(find . -maxdepth 1 -type d -regex '.*/flight-earth-[0-9.]*')"
  - PKGDIR_flare_timing="$(find . -maxdepth 1 -type d -regex '.*/flare-timing-[0-9.]*')"
  - PKGDIR_flight_fsdb="$(find . -maxdepth 1 -type d -regex '.*/flight-fsdb-[0-9.]*')"
  - PKGDIR_flight_gap="$(find . -maxdepth 1 -type d -regex '.*/flight-gap-[0-9.]*')"
  - PKGDIR_flight_igc="$(find . -maxdepth 1 -type d -regex '.*/flight-igc-[0-9.]*')"
  - PKGDIR_flight_kml="$(find . -maxdepth 1 -type d -regex '.*/flight-kml-[0-9.]*')"
  - PKGDIR_flight_latlng="$(find . -maxdepth 1 -type d -regex '.*/flight-latlng-[0-9.]*')"
  - PKGDIR_flight_lookup="$(find . -maxdepth 1 -type d -regex '.*/flight-lookup-[0-9.]*')"
  - PKGDIR_flight_mask="$(find . -maxdepth 1 -type d -regex '.*/flight-mask-[0-9.]*')"
  - PKGDIR_flight_route="$(find . -maxdepth 1 -type d -regex '.*/flight-route-[0-9.]*')"
  - PKGDIR_flight_scribe="$(find . -maxdepth 1 -type d -regex '.*/flight-scribe-[0-9.]*')"
  - PKGDIR_siggy_chardust="$(find . -maxdepth 1 -type d -regex '.*/siggy-chardust-[0-9.]*')"
  - PKGDIR_flight_span="$(find . -maxdepth 1 -type d -regex '.*/flight-span-[0-9.]*')"
  - PKGDIR_flight_task="$(find . -maxdepth 1 -type d -regex '.*/flight-task-[0-9.]*')"
  - PKGDIR_tasty_compare="$(find . -maxdepth 1 -type d -regex '.*/tasty-compare-[0-9.]*')"
  - PKGDIR_flight_time="$(find . -maxdepth 1 -type d -regex '.*/flight-time-[0-9.]*')"
  - PKGDIR_flight_track="$(find . -maxdepth 1 -type d -regex '.*/flight-track-[0-9.]*')"
  - PKGDIR_flight_units="$(find . -maxdepth 1 -type d -regex '.*/flight-units-[0-9.]*')"
  - PKGDIR_flight_zone="$(find . -maxdepth 1 -type d -regex '.*/flight-zone-[0-9.]*')"
  - PKGDIR_hcoord="$(find . -maxdepth 1 -type d -regex '.*/hcoord-[0-9.]*')"
  - PKGDIR_hcoord_utm="$(find . -maxdepth 1 -type d -regex '.*/hcoord-utm-[0-9.]*')"
  # Generate cabal.project
  - rm -rf cabal.project cabal.project.local cabal.project.freeze
  - touch cabal.project
  - |
    echo "packages: ${PKGDIR_flight_clip}" >> cabal.project
    echo "packages: ${PKGDIR_flight_cmd}" >> cabal.project
    echo "packages: ${PKGDIR_flight_comp}" >> cabal.project
    echo "packages: ${PKGDIR_detour_via_sci}" >> cabal.project
    echo "packages: ${PKGDIR_detour_via_uom}" >> cabal.project
    echo "packages: ${PKGDIR_flight_earth}" >> cabal.project
    echo "packages: ${PKGDIR_flare_timing}" >> cabal.project
    echo "packages: ${PKGDIR_flight_fsdb}" >> cabal.project
    echo "packages: ${PKGDIR_flight_gap}" >> cabal.project
    echo "packages: ${PKGDIR_flight_igc}" >> cabal.project
    echo "packages: ${PKGDIR_flight_kml}" >> cabal.project
    echo "packages: ${PKGDIR_flight_latlng}" >> cabal.project
    echo "packages: ${PKGDIR_flight_lookup}" >> cabal.project
    echo "packages: ${PKGDIR_flight_mask}" >> cabal.project
    echo "packages: ${PKGDIR_flight_route}" >> cabal.project
    echo "packages: ${PKGDIR_flight_scribe}" >> cabal.project
    echo "packages: ${PKGDIR_siggy_chardust}" >> cabal.project
    echo "packages: ${PKGDIR_flight_span}" >> cabal.project
    echo "packages: ${PKGDIR_flight_task}" >> cabal.project
    echo "packages: ${PKGDIR_tasty_compare}" >> cabal.project
    echo "packages: ${PKGDIR_flight_time}" >> cabal.project
    echo "packages: ${PKGDIR_flight_track}" >> cabal.project
    echo "packages: ${PKGDIR_flight_units}" >> cabal.project
    echo "packages: ${PKGDIR_flight_zone}" >> cabal.project
    echo "packages: ${PKGDIR_hcoord}" >> cabal.project
    echo "packages: ${PKGDIR_hcoord_utm}" >> cabal.project
  - echo 'package flight-clip' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-cmd' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-comp' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package detour-via-sci' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package detour-via-uom' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-earth' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flare-timing' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-fsdb' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-gap' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-igc' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-kml' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-latlng' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-lookup' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-mask' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-route' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-scribe' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package siggy-chardust' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-span' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-task' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package tasty-compare' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-time' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-track' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-units' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package flight-zone' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package hcoord' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - echo 'package hcoord-utm' >> cabal.project
  - "echo '  ghc-options: -Werror=missing-methods' >> cabal.project"
  - |
  - "for pkg in $($HCPKG list --simple-output); do echo $pkg | sed 's/-[^-]*$//' | (grep -vE -- '^(detour-via-sci|detour-via-uom|flare-timing|flight-clip|flight-cmd|flight-comp|flight-earth|flight-fsdb|flight-gap|flight-igc|flight-kml|flight-latlng|flight-lookup|flight-mask|flight-route|flight-scribe|flight-span|flight-task|flight-time|flight-track|flight-units|flight-zone|hcoord|hcoord-utm|siggy-chardust|tasty-compare)$' || true) | sed 's/^/constraints: /' | sed 's/$/ installed/' >> cabal.project.local; done"
  - cat cabal.project || true
  - cat cabal.project.local || true
  # Building...
  # this builds all libraries and executables (without tests/benchmarks)
  - ${CABAL} v2-build $WITHCOMPILER --disable-tests --disable-benchmarks all
  # Building with tests and benchmarks...
  # build & run tests, build benchmarks
  - ${CABAL} v2-build $WITHCOMPILER ${TEST} ${BENCH} all
  # Testing...
  - ${CABAL} v2-test $WITHCOMPILER ${TEST} ${BENCH} all
  # Building without installed constraints for packages in global-db...
  - rm -f cabal.project.local
  - ${CABAL} v2-build $WITHCOMPILER --disable-tests --disable-benchmarks all

# REGENDATA ("0.9.20200406",["--output=.travis.yml","--config=cabal.haskell-ci","cabal.project"])
# EOF
